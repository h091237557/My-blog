<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 拿鐵派的馬克 Blog</title>
    <link>https://mark-lin.com/posts/</link>
    <description>Recent content in Posts on 拿鐵派的馬克 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy;Your Name 2019</copyright>
    <lastBuildDate>Sun, 29 Sep 2019 20:16:57 +0800</lastBuildDate>
    
	<atom:link href="https://mark-lin.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>30-14 之資料庫層的優化 - 表的設計</title>
      <link>https://mark-lin.com/posts/20190929/</link>
      <pubDate>Sun, 29 Sep 2019 20:16:57 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20190929/</guid>
      <description>正文開始 本篇文章中咱們將要從『 表 』的角度來儘可能的優化性能。 表設計的幾個小建議 正規與非正規的小戰爭 表設計的幾個小建議 這個章節會給一些建立表時</description>
    </item>
    
    <item>
      <title>30-13 之資料庫層的優化 - 索引設計與雷區</title>
      <link>https://mark-lin.com/posts/20190928/</link>
      <pubDate>Sat, 28 Sep 2019 20:12:39 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20190928/</guid>
      <description>正文開始 前面兩篇文章中，咱們已經學習完索引的核心觀念以後，接下來咱們學學在使用時有那些的優質的方法與注意事項。 30-11 之資料庫層的核心 - 索引結構演</description>
    </item>
    
    <item>
      <title>30-12 之資料庫層的核心 - MySQL 的索引實現</title>
      <link>https://mark-lin.com/posts/20190927/</link>
      <pubDate>Fri, 27 Sep 2019 20:11:06 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20190927/</guid>
      <description>正文開始 上一篇文章中，我們理解了 innoDB 索引的基本原理 b+ 樹的，也理解了為什麼 innoDB 要選擇 b+ 樹的原因後，那接下來，我們要來理解，在 innoDB 中『 實際上 』是如何使</description>
    </item>
    
    <item>
      <title>30-11 之資料庫層的核心 - 索引結構演化論 B&#43;樹</title>
      <link>https://mark-lin.com/posts/20190926/</link>
      <pubDate>Thu, 26 Sep 2019 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20190926/</guid>
      <description>正文開始 接下來咱們要來理解資料庫系統中最核心的問題 : 要如何儲放資料，才能更快速的找到資料呢 ? 而這個東西的技術就是所謂的 : 索引 而在 mysql 中決定如何</description>
    </item>
    
    <item>
      <title>30-30之MongoDB三十天的學習之旅</title>
      <link>https://mark-lin.com/posts/20160930/</link>
      <pubDate>Fri, 30 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160930/</guid>
      <description>不知不覺~漫長的鐵人賽就進入了尾聲，當初會參加鐵人賽也只是因為，沒參加過 ~ 來試試看，而且也剛好我今年的時間比較多點兒，話說回來，為什麼我會選</description>
    </item>
    
    <item>
      <title>30-29之MongoDB--- 事務操作的空虛感</title>
      <link>https://mark-lin.com/posts/20160929/</link>
      <pubDate>Thu, 29 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160929/</guid>
      <description>本篇文章是用來補充一下，前面忘了講的觀念，記得在第一篇時，我們有提過下面這句話。 MongoDB 不支持事務操作 但事實上這段話有很多觀念要來說明說明，不然很</description>
    </item>
    
    <item>
      <title>30-28之MongoDB運用研究---股價應用模擬(3)</title>
      <link>https://mark-lin.com/posts/20160928/</link>
      <pubDate>Wed, 28 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160928/</guid>
      <description>上一篇研究簡單的說明完，股價分析的運用操作後，接下來我們這篇文章將要說明一些程式交易的東西，不過雖然說是程式交易，但事實上也只是簡單的計算出</description>
    </item>
    
    <item>
      <title>30-27之MongoDB運用研究---股價應用模擬(2)</title>
      <link>https://mark-lin.com/posts/20160927/</link>
      <pubDate>Tue, 27 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160927/</guid>
      <description>上一篇文章中，我們已經說明完基本的架構以及索引和分片的選擇，接下來我們就要實際的來使用資料來進行一些分析，能用搜尋時就用搜尋，不能用搜尋時就</description>
    </item>
    
    <item>
      <title>30-26之MongoDB運用研究---股價應用模擬(1)</title>
      <link>https://mark-lin.com/posts/20160926/</link>
      <pubDate>Mon, 26 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160926/</guid>
      <description>前面幾篇文章我們說明完了分片的運用後，我們接下來，就來實際的模擬個情景，我們來學習要如何的一步一步完成，咱們選擇的模擬情境為股價應用，現在F</description>
    </item>
    
    <item>
      <title>30-25之MongoDB分片Sharding(3)---片鍵的選擇</title>
      <link>https://mark-lin.com/posts/20160925/</link>
      <pubDate>Sun, 25 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160925/</guid>
      <description>上一篇文章我們詳細的說明完分片的機制後，接下來我們就要來詳細的說明片鍵的選擇，片鍵的選擇關係到你的分片執行速度與效能，並且一但建立後，要再修</description>
    </item>
    
    <item>
      <title>30-24之MongoDB分片Sharding(2)---Chunk的札事</title>
      <link>https://mark-lin.com/posts/20160924/</link>
      <pubDate>Sat, 24 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160924/</guid>
      <description>在上一篇文章中說明完基本的分片概念後，我們本章節要更深的了解分片內的chunk， 它是每個分片組成的東西，我們這篇將要說明它的拆分與分配機制。</description>
    </item>
    
    <item>
      <title>30-23之MongoDB分片Sharding---Hello Sharding</title>
      <link>https://mark-lin.com/posts/20160923/</link>
      <pubDate>Fri, 23 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160923/</guid>
      <description>本篇文章將要說明 mongodb 的分片`，上一章節說明了如何將資料同步到其它台節點上，而本篇文章是將要說明，如何將資料分割到其它台節點，讓我們可以更快速、</description>
    </item>
    
    <item>
      <title>30-22之MongoDB的副本集 replica set(2)---使用Docker建立MongoDB Cluster</title>
      <link>https://mark-lin.com/posts/20160922/</link>
      <pubDate>Thu, 22 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160922/</guid>
      <description>上篇文章我們已經說明完，如何在本機上建立 mongodb 副本集，而本篇文章，我們將要實際的使用docker來建立有三個節點的副本集，也就是所謂 cluster 。 開始前的</description>
    </item>
    
    <item>
      <title>30-21之MongoDB的副本集 replica set(1)</title>
      <link>https://mark-lin.com/posts/20160921/</link>
      <pubDate>Wed, 21 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160921/</guid>
      <description>本篇文章將要說明， mongodb 的副本集。嗯~想想一個情況，現在咱們只使用一台 server 來存放資料，我們現在只是測試和開發， GG 囉也只是啊一聲，但如果是正式上線環</description>
    </item>
    
    <item>
      <title>30-20之MongoDB運用研究---PO文情境模擬(3)</title>
      <link>https://mark-lin.com/posts/20160920/</link>
      <pubDate>Tue, 20 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160920/</guid>
      <description>上篇文章中，基本上已經把po文的方法，大部份都完成了，也建立好了索引，並且也將po文常見的搜尋給實作出來，接下來本篇文章，我們將要站在資料分</description>
    </item>
    
    <item>
      <title>30-19之MongoDB運用研究---PO文模擬情境(2)</title>
      <link>https://mark-lin.com/posts/20160919/</link>
      <pubDate>Mon, 19 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160919/</guid>
      <description>上篇文章中，咱們已經將資料都建立好了，也完成了第一個需求，使用者可以進行PO文，並且我們建立出了模擬資料共一百萬筆，大約1gb的大小，接下來</description>
    </item>
    
    <item>
      <title>30-18之MongoDB運用研究---PO文模擬情境(1)</title>
      <link>https://mark-lin.com/posts/20160918/</link>
      <pubDate>Sun, 18 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160918/</guid>
      <description>咱們來細數一下，我們在前面的幾篇學了那些東西~ mongodb 的新增、刪除、更新、搜尋。 mongodb 的索引運用。 mongodb 的資料分析工具 Aggregate 聚合。 mongodb 的設計。 是的~雖然看起來很</description>
    </item>
    
    <item>
      <title>30-17之MongoDB的設計---正規與反正規化的戰爭</title>
      <link>https://mark-lin.com/posts/20160917/</link>
      <pubDate>Sat, 17 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160917/</guid>
      <description>本篇文章將說要說如何設計mongodb的架構，讓你可以更快速的使用mongodb。 資料庫的正規化(文鄒鄒)。 mongodb正規化與反正規化。</description>
    </item>
    
    <item>
      <title>30-16之MongoDB聚合(3)---潮潮的MapReduce</title>
      <link>https://mark-lin.com/posts/20160916/</link>
      <pubDate>Fri, 16 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160916/</guid>
      <description>前兩篇說明完 mongodb 所提供的第一種聚合工作 aggregate framework ，本篇文章將要說明 mongodb 所提供的第二種聚合工作， MapReduce` 嗯…只要有微微研究過大數據，應該都有聽個這個潮潮的名詞</description>
    </item>
    
    <item>
      <title>30-15之MongoDB聚合(2)---Pipeline武器庫</title>
      <link>https://mark-lin.com/posts/20160915/</link>
      <pubDate>Thu, 15 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160915/</guid>
      <description>在上一篇文章中說明了 pipeline 操作符號，接下來我們這篇要說明在操作符號內使用的 pipeline 表達式，它讓我們可以在pipeline 內進行計算、比較、字串修改等分</description>
    </item>
    
    <item>
      <title>30-14之MongoDB聚合(1)---Aggregate Framework的哩哩扣扣</title>
      <link>https://mark-lin.com/posts/20160914/</link>
      <pubDate>Wed, 14 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160914/</guid>
      <description>在前面幾篇都是說明如何尋找到你想要的東西，而在接下來的聚合章節中，我們將說來學習到如何使用聚合工具，來幫助我們分析更多資料，以下為本篇要說明</description>
    </item>
    
    <item>
      <title>30-13之MongoDB索引(3)---比較特別的索引使用</title>
      <link>https://mark-lin.com/posts/20160913/</link>
      <pubDate>Tue, 13 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160913/</guid>
      <description>本篇文章將要說明幾個比較特別索引使用的方法。 索引陣列欄位 索引子欄位 全文索引 P.S 快要一半囉~~+u^13 ~ 索引陣列欄位 ~ 假設你有下列資料，但發現</description>
    </item>
    
    <item>
      <title>30-12之MongoDB索引(2)---複合索引的坑</title>
      <link>https://mark-lin.com/posts/20160912/</link>
      <pubDate>Mon, 12 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160912/</guid>
      <description>本文將會說明以下幾點。 複合索引是啥~ 複合索引的運用與坑坑坑~ ~ 複合索引是啥 ~ 假設有下列資料。 { &amp;#34;name&amp;#34; : &amp;#34;mark&amp;#34; , &amp;#34;age&amp;#34; : 20} { &amp;#34;name&amp;#34; : &amp;#34;mark&amp;#34; , &amp;#34;age&amp;#34; : 25} { &amp;#34;name&amp;#34; : &amp;#34;steven&amp;#34; , &amp;#34;age&amp;#34; : 30}</description>
    </item>
    
    <item>
      <title>30-11之MongoDB索引(1)的哩哩扣扣</title>
      <link>https://mark-lin.com/posts/20160911/</link>
      <pubDate>Sun, 11 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160911/</guid>
      <description>本篇文章將會說明以下幾點。 什麼是索引? 索引的優點與缺點 索引的建立 索引與非索引搜尋比較 不要使用索引的時機 P.S +u^11鐵人們 ~ 事實上我已快gg了</description>
    </item>
    
    <item>
      <title>30-10之MongoDB新手村CRUD---搜尋之Cursor運用與搜尋原理</title>
      <link>https://mark-lin.com/posts/20160910/</link>
      <pubDate>Sat, 10 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160910/</guid>
      <description>本篇文章將要說明cursor的用法以及一些curosr的方法，可以搜尋後用來限制或排序結果的功能，以及說明一下在不考慮索引情況下find的搜</description>
    </item>
    
    <item>
      <title>30-9之MongoDB新手村CRUD---搜尋之陣列欄位與regex</title>
      <link>https://mark-lin.com/posts/20160909/</link>
      <pubDate>Fri, 09 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160909/</guid>
      <description>本篇文章將要說明其它幾個搜尋方法，包含如何搜尋document中的陣列欄位的值以及運用正規表達式regex 來進行搜尋。 搜尋陣列內容 正規表達式</description>
    </item>
    
    <item>
      <title>30-8之MongoDB新手村CRUD---搜尋之find與搜尋操作符號</title>
      <link>https://mark-lin.com/posts/20160908/</link>
      <pubDate>Thu, 08 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160908/</guid>
      <description>前面幾篇已經說明完了新增、修改、刪除，最後咱們新手村之旅的尾巴將要說明搜尋，這個功能應該是我們最常會使用到的，請好好的學習。 find方法基本</description>
    </item>
    
    <item>
      <title>30-7之MongoDB新手村CRUD---刪除</title>
      <link>https://mark-lin.com/posts/20160907/</link>
      <pubDate>Wed, 07 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160907/</guid>
      <description>本篇文章將要來說明MongoDB的刪除方法，rmoeve、deleteOne、deleteMany、bulk，並且簡單的比較一下速有有何差別</description>
    </item>
    
    <item>
      <title>30-6之MongoDB新手村CRUD---更新之陣列欄位攻略</title>
      <link>https://mark-lin.com/posts/20160906/</link>
      <pubDate>Tue, 06 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160906/</guid>
      <description>本篇文章將要說明陣列修改器 push，主要就是針對 document 中的陣列進行修改，同時他也可以搭配 each、slice、ne、addToSet、pop、p</description>
    </item>
    
    <item>
      <title>30-5之MongoDB新手村CRUD---更新</title>
      <link>https://mark-lin.com/posts/20160905/</link>
      <pubDate>Mon, 05 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160905/</guid>
      <description>本篇將要來說明MongoDB中更新文檔的方法，並且也同時會說明更新修改器的功能，它能幫助我們進行更有效率的更新。 基本更新方法Update。 更</description>
    </item>
    
    <item>
      <title>30-4之MongoDB新手村CRUD---新增之Bulk與新增效能測試</title>
      <link>https://mark-lin.com/posts/20160904/</link>
      <pubDate>Sun, 04 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160904/</guid>
      <description>本篇文章會運用上一篇提到的二種新增方法insert、insertMany，以及另一種新增方法Bulk來做執行速度比較 ; 由於insertMan</description>
    </item>
    
    <item>
      <title> 30-3之MongoDB新手村CRUD---新增</title>
      <link>https://mark-lin.com/posts/20160903/</link>
      <pubDate>Sat, 03 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160903/</guid>
      <description>安裝好MongoDB後，接下來本篇主要說明如何新增資料至MongoDB中，而用更精確的詞彙來說是，如何新增document至collecti</description>
    </item>
    
    <item>
      <title>30-1 之 MongoDB 基礎知識</title>
      <link>https://mark-lin.com/posts/20160901/</link>
      <pubDate>Thu, 01 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160901/</guid>
      <description>Hello ~ 大家好 ~ 接下來的30天的文章，小的我將要說明如何從0 → 1開始來學習MongoDB，咱們這30天的文章結構大至上會如下。 首先，先來個十篇的</description>
    </item>
    
    <item>
      <title>30-2之使用 Docker 來建構 MongoDB</title>
      <link>https://mark-lin.com/posts/20160902/</link>
      <pubDate>Thu, 01 Sep 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160902/</guid>
      <description>由於網站上已經有很多mongodb的安裝方法，所以本篇將說明，如何使用Docker來建立可使用mongodb的環境，這也代表你的電腦只要有安</description>
    </item>
    
    <item>
      <title>Cordova-Cordova Chrome Debug</title>
      <link>https://mark-lin.com/posts/20160210/</link>
      <pubDate>Wed, 10 Feb 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160210/</guid>
      <description>在寫網頁時，最常使用到Chrome來進行Debug，對開發非常的有幫助，但如果是在Cordova上呢?這篇文章就是要介紹如何時用Chrome</description>
    </item>
    
    <item>
      <title>CSS-Box Model 觀念</title>
      <link>https://mark-lin.com/posts/20160201/</link>
      <pubDate>Mon, 01 Feb 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160201/</guid>
      <description>Css Box Model 規定了Element處理元素Content、Padding、border、margin的方式 。 Box Model基本概念 這張圖就是在說明一個</description>
    </item>
    
    <item>
      <title>CSS-Position 觀念</title>
      <link>https://mark-lin.com/posts/20160202/</link>
      <pubDate>Mon, 01 Feb 2016 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20160202/</guid>
      <description>在上一篇Css Box Model討論完Element的大小問題，接來下來談談Element的位置(Position)問題，Css中可以對Eleme</description>
    </item>
    
    <item>
      <title>HTML5 之走在平行時空的 Web Worker</title>
      <link>https://mark-lin.com/posts/20151001/</link>
      <pubDate>Thu, 01 Oct 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20151001/</guid>
      <description>什麼是Web Worker？，它就是個運行在後台的Javascript，獨立於其它Script，並且不會影響效能，但它不能影響Dom、並不能訪</description>
    </item>
    
    <item>
      <title>Jquery 的 Promise 之 when 與 then ( pipe )</title>
      <link>https://mark-lin.com/posts/20150909/</link>
      <pubDate>Wed, 09 Sep 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150909/</guid>
      <description>在這篇文章中，我們將來說明一下when與then(pipe)的用法，這兩個方法都算是promise衍伸技術。 deferred.when 在實務上很常有這種要求，任務</description>
    </item>
    
    <item>
      <title>Javascript非同步編程的方法 - Promise</title>
      <link>https://mark-lin.com/posts/20150908/</link>
      <pubDate>Tue, 08 Sep 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150908/</guid>
      <description>在上一篇介紹 PubSub 的方法後，發現該方法不適合處理一次性事件，而Promise就是用來解決該問題的手法。那什麼是Promise呢?，他是一種非同步</description>
    </item>
    
    <item>
      <title>Javascript非同步編程的方法 - Pub/Sub</title>
      <link>https://mark-lin.com/posts/20150907/</link>
      <pubDate>Mon, 07 Sep 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150907/</guid>
      <description>發布與訂閱模式Pub/Sub它主要的概念為 : 定義一對多的關係，當一件事情發布時會同時通知所有的訂閱者 在 Javascript 與 Jquery 非常容易看到該模式的使用。例如 J</description>
    </item>
    
    <item>
      <title>Javascript 非同步編程的方法 - setTimeout</title>
      <link>https://mark-lin.com/posts/20150906/</link>
      <pubDate>Sun, 06 Sep 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150906/</guid>
      <description>在Javascript單線程與Javascript之Event Driven這兩篇文章中，我們大概了解了單線程與非同步事件的工作原理，在這篇中</description>
    </item>
    
    <item>
      <title>Javascript 之 Event Driven</title>
      <link>https://mark-lin.com/posts/20150905/</link>
      <pubDate>Sat, 05 Sep 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150905/</guid>
      <description>在Javascript單線程該篇文章中有提到，大部份這種單線程但可以處理非同步的語言都有共同的特性那就是事件驅動(Event Driven)，</description>
    </item>
    
    <item>
      <title>Javascript 之單線程</title>
      <link>https://mark-lin.com/posts/20150904/</link>
      <pubDate>Fri, 04 Sep 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150904/</guid>
      <description>首先看看下面的程式碼，會發現永遠跑不出So sad，因為Javascript為單線程，雖然設定１秒過後isEnd為false，然後應該就直接跑</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 11-『 泛型 ( Generics ) 』</title>
      <link>https://mark-lin.com/posts/20150826/</link>
      <pubDate>Wed, 26 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150826/</guid>
      <description>什麼是泛型呢 什麼是泛型呢~? 這個東西有看過吧，你有時後會在程式碼裡看到List這種寫法， 這代表List串列中，你可以存放『T』型別，例如Li</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 10 -『 委派 ( Delegate ) 』</title>
      <link>https://mark-lin.com/posts/20150825/</link>
      <pubDate>Tue, 25 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150825/</guid>
      <description>什麼是委派 委派是以特定參數清單和傳回型別表示對方法的參考型別。 當您具現化委派時您可以使其執行個體具有相容簽章和傳回型別的所有方法。(MSDN</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 9-『 物件導向特性-封裝 ( Encapsulation ) 』</title>
      <link>https://mark-lin.com/posts/20150824/</link>
      <pubDate>Mon, 24 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150824/</guid>
      <description>存取修飾詞 存取修飾詞 說明 public 無任何存取限制。 internal 只能在自已類別與專案(組件)中其它類別進行存取。(不包含其它專案)。 protected 只能在自已類別和子類別中存</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 8-『 屬性 ( Properties ) 與欄位 ( Field ) 和存取子 ( accessor ) 』</title>
      <link>https://mark-lin.com/posts/20150823/</link>
      <pubDate>Sun, 23 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150823/</guid>
      <description>區別何謂屬性與何謂欄位 先來說說欄位，欄位(Field)是一個任意型別(Type)的變數，直接在類別(Class)與結構(struct)中宣告</description>
    </item>
    
    <item>
      <title>物件導向系列菜單7-『 部分類別 ( Partial Class ) 』</title>
      <link>https://mark-lin.com/posts/20150822/</link>
      <pubDate>Sat, 22 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150822/</guid>
      <description>部份類別 ( Partial Class ) 部分類別使用時機大都在處理大型專案時，將類別分散至個別檔案，可讓多位程式設計師進行運作。 程式碼說明建立部分類別的方法，就是加</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 6-『 Interface 介面 』</title>
      <link>https://mark-lin.com/posts/20150821/</link>
      <pubDate>Fri, 21 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150821/</guid>
      <description>Interface概念 介面(Interface)你可以將他想成是商品契約，所有要商品的交易，都要經過這個商品契約來決定，例如裡面說交易單位是</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 5 -『 物件導向特性-繼承 ( Inheritance ) 4 - abstract 』</title>
      <link>https://mark-lin.com/posts/20150820/</link>
      <pubDate>Thu, 20 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150820/</guid>
      <description>使用修飾詞abstract，限定類別只能被繼承 在Class Car 前增加abstract，表是該類別只能繼承、不能實作，也被稱為抽象類別。 //父類</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 4 -『 物件導向特性-繼承(Inheritance) 3 - Sealed 』</title>
      <link>https://mark-lin.com/posts/20150819/</link>
      <pubDate>Wed, 19 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150819/</guid>
      <description>特點 1 - 使用 Sealed 關鍵字使類別不能被繼承 下列為簡單的Sealed範例。 父類別Class Car ，有兩個屬性分別為Speed與Color，並自行訂定建構</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 3 -『 物件導向特性-繼承 ( Inheritance ) 2- Virtual 與 Override 』</title>
      <link>https://mark-lin.com/posts/20150818/</link>
      <pubDate>Tue, 18 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150818/</guid>
      <description>Virtual 修飾詞 子類別的方法名稱和父類別的方法名稱一樣，著麼辦呢 ? virtual 關鍵字的用途是修改方法、屬性或事件宣告，以及允許在衍生類別中給予覆寫。通常使用的</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 2-『 物件導向特性-繼承 ( Inheritance ) 1 』</title>
      <link>https://mark-lin.com/posts/20150817/</link>
      <pubDate>Mon, 17 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150817/</guid>
      <description>繼承為物件導向的三大特性之一(封裝、多型)，你可以想像老爸與兒子的關係，兒子會繼承老爸所擁有的特徵(屬性)和)財產(方法)(現實上不一定，但</description>
    </item>
    
    <item>
      <title>物件導向系列菜單 1-『 基本概念 』</title>
      <link>https://mark-lin.com/posts/20150816/</link>
      <pubDate>Sun, 16 Aug 2015 19:51:35 +0800</pubDate>
      
      <guid>https://mark-lin.com/posts/20150816/</guid>
      <description>物件導向基本概念為『類別』與『物件』 基本上保哥這篇文章已經寫的很清楚了保哥 (保哥)，但知識的學習還是要經過自已的腦袋與手加眼睛，所以小弟我也</description>
    </item>
    
  </channel>
</rss>