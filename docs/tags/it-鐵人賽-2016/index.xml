<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IT 鐵人賽 2016 on 拿鐵派的馬克 Blog</title>
    <link>https://mark-lin.com/tags/it-%E9%90%B5%E4%BA%BA%E8%B3%BD-2016/</link>
    <description>Recent content in IT 鐵人賽 2016 on 拿鐵派的馬克 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <managingEditor>h091237557@gmail.com (marklin)</managingEditor>
    <webMaster>h091237557@gmail.com (marklin)</webMaster>
    <lastBuildDate>Fri, 30 Sep 2016 19:51:35 +0800</lastBuildDate>
    
        <atom:link href="https://mark-lin.com/tags/it-%E9%90%B5%E4%BA%BA%E8%B3%BD-2016/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>30-30之MongoDB三十天的學習之旅</title>
      <link>https://mark-lin.com/posts/20160930/</link>
      <pubDate>Fri, 30 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160930/</guid>
      <description>&lt;p&gt;不知不覺~漫長的鐵人賽就進入了尾聲，當初會參加鐵人賽也只是因為，沒參加過 ~ 來試試看，而且也剛好我今年的時間比較多點兒，話說回來，為什麼我會選&lt;code&gt;MongoDB&lt;/code&gt;來當題目呢?事實上也只是因為我自已無聊在做的專案，有把&lt;code&gt;mongoDB&lt;/code&gt;拿來用，所以就想說認真的來研究一下&lt;code&gt;mongoDB&lt;/code&gt; ~&lt;/p&gt;
&lt;p&gt;我們簡單的總結一下我們這三十天學了那些東西。&lt;/p&gt;
&lt;p&gt;首先最基本的一定是一個資料庫的&lt;code&gt;CRUD&lt;/code&gt;，這階段就像玩天堂時的說話島一樣，你要打打哥布林。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160903/&#34;&gt;30-3之新手村CRUD&amp;mdash;新增&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160904/&#34;&gt;30-4之新手村CRUD&amp;mdash;新增之Bulk與新增效能測試&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160905/&#34;&gt;30-5之新手村CRUD&amp;mdash;更新&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160906/&#34;&gt;30-6之新手村CRUD&amp;mdash;更新之陣列欄位&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160907/&#34;&gt;30-7之新手村CRUD&amp;mdash;刪除&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160908/&#34;&gt;30-8之新手村CRUD&amp;mdash;搜尋之find與搜尋操作符號&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160909/&#34;&gt;30-9之新手村CRUD&amp;mdash;搜尋之陣列欄位與regex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160910/&#34;&gt;30-10之新手村CRUD&amp;mdash;搜尋之Cursor運用與搜尋原理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然後在基礎的新手村畢業以後，你就可以坐船前往大陸，不過下船的地方在那我有點忘了。
接下來我們要學習的事情就是，要如何的使我們搜尋速度更快速。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160911/&#34;&gt;30-11之索引(1)&amp;mdash;索引的哩哩扣扣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160912/&#34;&gt;30-12之索引(2)&amp;mdash;複合索引的坑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160913/&#34;&gt;30-13之索引(3)&amp;mdash;比較特別的索引使用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在我們了解了如何將搜尋速度提升更快後，我們就可以來研究如何使用&lt;code&gt;mongodb&lt;/code&gt;來進行資料分析，這個階段就像是龍之谷吧……年代有點久遠有點快忘了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160914/&#34;&gt;30-14之聚合(1)&amp;mdash;Aggregate Framework的哩哩扣扣&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160915/&#34;&gt;30-15之聚合(2)&amp;mdash;Pipeline武器庫&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160916/&#34;&gt;30-16之聚合(3)&amp;mdash;潮潮的MapReduce&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可是分析完後，我們發覺有些地方效能還不是不太好，明明索引那些都處理好囉 ? 這時我們只能往架構方面來尋找問題囉。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160917/&#34;&gt;30-17之MongoDB的設計&amp;mdash;正規與反正規化的戰爭&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在以上的東西都已經學習的差不多時，這時我們就要來驗證一下，我們是否真的有學習進腦袋裡，這時最簡單的驗證方法，就是自已想個題目，然後從&lt;code&gt;0 → 1 &lt;/code&gt;自已建立看看。順到一題&lt;a href=&#34;http://www.books.com.tw/products/0010651050&#34;&gt;&lt;code&gt;0 → 1&lt;/code&gt;&lt;/a&gt;這本書真的不錯看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160918/&#34;&gt;30-18之運用研究&amp;mdash;PO文模擬情境(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160919/&#34;&gt;30-19之運用研究&amp;mdash;PO文模擬情境(2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160920/&#34;&gt;30-20之運用研究&amp;mdash;PO文情境模擬(3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在驗證完以上的東西都學習會後，我們可以往分散式的東西進行學習囉，這邊應該就是傲慢之塔的等級囉。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160921/&#34;&gt;30-21之MongoDB的副本集 replica set(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160922/&#34;&gt;30-22之MongoDB的副本集 replica set(2)&amp;mdash;使用Docker建立MongoDB Cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160923/&#34;&gt;30-23之分片Sharding(1)&amp;mdash;Hello Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160924/&#34;&gt;30-24之分片Sharding(2)&amp;mdash;Chunk的札事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160925/&#34;&gt;30-25之分片Sharding(3)&amp;mdash;片鍵的選擇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然後接下來的最後一部份也是驗證你上面的東西有沒有學會。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160926/&#34;&gt;30-26之運用研究&amp;mdash;股價應用模擬(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160927/&#34;&gt;30-27之運用研究&amp;mdash;股價應用模擬(2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160928/&#34;&gt;30-28之運用研究&amp;mdash;股價應用模擬(3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;事實上到這邊應該就可以結束了，但我事實上有忘記一個主題，所以補充在最後面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mark-lin.com/posts/20160929/&#34;&gt;30-29之補充&amp;mdash;忘了講的事務操作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;最後忘了講幾句感言的話，事實上我很感謝上天，還能給予我可以參加30天鐵人賽的腦袋與體力，2016年應該是我目前的人生轉哲最大的年度，我生了一場重病，我得的病就是你們腦袋中最不想得的病排行板前三名， ~ 啊喲啊喲 ~ 小的才2開頭而以 ~ 啊喲啊喲 ~ 得這病是真的失去不少東西，而且治療過程，有時後我會想，似乎上天堂好像會輕鬆點兒，上一句只是完笑，得這鬼病也只有一條路，面對現實就對囉~&lt;/p&gt;
&lt;p&gt;不過呢~我是想和有看過這篇文章的人說，請好好珍惜你的『正常的生活』，所謂的正常生活就是你們覺得一切很正常的事情，但對我們生病的人來說『正常的生活』是很奢侈的，不過我算幸運，還可以回到50%的正常生活，至少還可以讓我寫寫程式，看看書。&lt;/p&gt;
&lt;p&gt;最後呢~送給看過的這篇文章的幾個建議，首先請保持充足的睡眠，再來是充足的運動，最後是健康的飲食，這樣至少你的『正常生活』才可長久， 記好好好覺、好好動、好好吃 ~。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;30&#34;&gt;30天正式結束&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>30-29之MongoDB--- 事務操作的空虛感</title>
      <link>https://mark-lin.com/posts/20160929/</link>
      <pubDate>Thu, 29 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160929/</guid>
      <description>&lt;p&gt;本篇文章是用來補充一下，前面忘了講的觀念，記得在第一篇時，我們有提過下面這句話。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDB 不支持事務操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但事實上這段話有很多觀念要來說明說明，不然很難讓人了解事務操作是啥，所以我們這篇要用來補充一下這個主題。&lt;/p&gt;
&lt;h2 id=&#34;--&#34;&gt;~ 事務操作是啥鬼 ~&lt;/h2&gt;
&lt;p&gt;咱們首先先來了解一下，&lt;strong&gt;事務&lt;/strong&gt;是啥?根據&lt;code&gt;wiki&lt;/code&gt;的定義。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;資料庫事務是資料庫管理系統執行過程中的一個邏輯單位，由一個有限的資料庫操作序列構成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這邊用白話文來簡單說明一下，事實操作你可以把他想成一個工作流程，例如煮菜，你首先要先洗菜、切菜、丟到鍋子、加調味料，『煮菜』這名詞就是一個事務，它裡面包含了剛剛說明的流程。&lt;/p&gt;
&lt;p&gt;我們轉回的在資料庫中的事務，假設我們是個證券商，我們收到使用者的下單通知，那我們資料庫會著麼進行? 我們下面來試試列出該事務操作過程。其中我們有兩個資料表&lt;code&gt;accounts&lt;/code&gt;為使用者的帳戶資料、第二個為&lt;code&gt;orders&lt;/code&gt;下單資料，呃對了先不管交割日這鬼，也就是付錢日。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先我們會先在&lt;code&gt;orders&lt;/code&gt;新增一筆訂單。&lt;/li&gt;
&lt;li&gt;再到&lt;code&gt;accounts&lt;/code&gt;針對該使用者的帳戶進行扣款。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;那如果發生錯誤時，事務會著麼處理?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根據以上的例子，我們拿來繼續使用，假設我們在第二個步驟，準備要扣款時，系統突然&lt;code&gt;gg&lt;/code&gt;了，那要著麼樣?在一些資料庫中，當整個事務提交給資料庫時，&lt;strong&gt;它會保證這整個事務要嘛全部完成，要嘛全部沒完成。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也就是說，如果我們第二個步驟掛掉時，我們一開始在&lt;code&gt;orders&lt;/code&gt;新增的一筆訂單會取消，會保持整個事務的完整性，不會只完成一半。&lt;/p&gt;
&lt;p&gt;最後這邊我們來看一下事務操作的四個特性&lt;code&gt;ACID&lt;/code&gt;，來腦補一下，以下內容為&lt;code&gt;wiki&lt;/code&gt;，並且自已寫寫說明。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原子性（Atomicity） : 要麼全執行、要麼全取消，沒得商量。&lt;/li&gt;
&lt;li&gt;一致性（Consistency）: 這個是指在事務開始與結束後，資料庫的完整性約束沒有被破壞。&lt;/li&gt;
&lt;li&gt;隔離性（Isolation）: 多個事務執行時，任一個事務不會影響到其它的事務。&lt;/li&gt;
&lt;li&gt;持久性（Durability）: 代表即時停電或啥，事務一旦提交後，則持久化保存在資料庫中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-mongodb--&#34;&gt;~ MongoDB 不支援事務 ~&lt;/h2&gt;
&lt;p&gt;對&lt;code&gt;mongodb&lt;/code&gt;不支援事務，但它還是有支援一些符合各別特性的操作，總共有三個。&lt;/p&gt;
&lt;h3 id=&#34;1--document--findandmodify&#34;&gt;1. 在單個 document 上有提供原子性操作 findAndModify&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mongodb&lt;/code&gt;有提供單個&lt;code&gt;document&lt;/code&gt;，操作，也就是說如果你要針對該&lt;code&gt;document&lt;/code&gt;進行更新，要麼全部更新完成，不然就全部不更新，我們簡單用個範例來說明如何設計成，符合原子性的功能。&lt;/p&gt;
&lt;p&gt;我們把上面的例子拿下來用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假設我們是個證券商，我們收到使用者的下單通知，那我們資料庫會著麼進行? 我們下面來試試列出該事務操作過程。其中我們有兩個資料表&lt;code&gt;accounts&lt;/code&gt;為使用者的帳戶資料、第二個為&lt;code&gt;orders&lt;/code&gt;下單資料，呃對了先不管交割日這鬼，也就是付錢日。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但注意一點，如果我們是建立將&lt;code&gt;accounts&lt;/code&gt;與&lt;code&gt;orders&lt;/code&gt;分成兩個&lt;code&gt;collection&lt;/code&gt;來建立，那我們就沒辦法使用&lt;code&gt;mongodb&lt;/code&gt;所提供的原子性操作，因為就變為多&lt;code&gt;document&lt;/code&gt;的操作。&lt;/p&gt;
&lt;p&gt;所以我們需要將它修改為都存放在同一個&lt;code&gt;collection&lt;/code&gt;，沒錯也就是進行反正規化，資料大概會變成這樣。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mark&amp;#34;&lt;/span&gt; , 
  &lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; ,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;orders&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
  	{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;20160101&amp;#34;&lt;/span&gt; },
  	{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;20160103&amp;#34;&lt;/span&gt;}
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們進行交易時，我們需要先檢查&lt;code&gt;balance&lt;/code&gt;確定是否有足的錢，然後在新增一筆下單到&lt;code&gt;orders&lt;/code&gt;欄位中，最後才修改&lt;code&gt;balance&lt;/code&gt;，而我們這時需要用到&lt;code&gt;findAndModify &lt;/code&gt;，它可以確保這筆交易的，在確定完&lt;code&gt;balance&lt;/code&gt;後，不會有其它線程來更新它的&lt;code&gt;balance&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我們來說一下沒用&lt;code&gt;findAndModify&lt;/code&gt;會發生什麼情況，假設&lt;code&gt;balance&lt;/code&gt;有&lt;code&gt;10000&lt;/code&gt;，有一筆下單要&lt;code&gt;6000&lt;/code&gt;元，然後&lt;code&gt;A&lt;/code&gt;是來處理這筆訂單的線程，我們來模擬情境一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A : 我先來確定一下&lt;code&gt;balance&lt;/code&gt;是否有足夠的錢，嗯嗯~~還有&lt;code&gt;10000&lt;/code&gt;很夠的。&lt;/li&gt;
&lt;li&gt;B(另一個線程) : 我先來扣錢一下，總共要扣&lt;code&gt;5000&lt;/code&gt;元，現在&lt;code&gt;balance&lt;/code&gt;只剩&lt;code&gt;5000&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;A : 好~那接下來新增一筆下單到&lt;code&gt;orders&lt;/code&gt;欄位，然後再進行扣款。&lt;/li&gt;
&lt;li&gt;A : what fuc&amp;hellip;. !!! 為啥&lt;code&gt;balance&lt;/code&gt;現在不夠錢了 ! 錢呢 !?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯記好，這時要用&lt;code&gt;findAndModify&lt;/code&gt;才不會發生上面這種鳥事。下面為更新的程式碼。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;findAndModify&lt;/span&gt;({  
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mark&amp;#34;&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt; }},
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$set&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4000&lt;/span&gt; },
					&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$push&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;orders&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
					 {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;total&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6000&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;20160110&amp;#34;&lt;/span&gt;} } }

})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2--document--isolate&#34;&gt;2. 對多個 document 使用 $isolate&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mongodb&lt;/code&gt;還有提供一個東東，它可以讓你在更新大量&lt;code&gt;document&lt;/code&gt;時，其它的線程無法針對這些更新的文檔進行讀與寫，也就是支援隔離性（Isolation）。&lt;/p&gt;
&lt;p&gt;但當然它也是有缺點的，有以下三個缺點。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先是性能的問題，因為你都把人家鎖住了，人家當然要等你解鎖，&lt;/li&gt;
&lt;li&gt;他沒有支援原子性的功能，也就是你更新完一半囉，但發生錯誤了，你已經更新好的不會回復成原始狀態。&lt;/li&gt;
&lt;li&gt;它不支援分片。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-two-phase-commits-&#34;&gt;3. Two Phase Commits 來模擬事務操作&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mongodb&lt;/code&gt;官方，有提供一種範例方法，讓我們手動的來建立事務操作，它可以讓我們在進行大量更新時，如果發生錯誤，則之前更新的會全部還原，這種方法就叫&lt;code&gt;Two Phase Commits&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我們直接拿官方的例子來說明，假設有兩個銀行帳號。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;save&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []})
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;save&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; []})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們這時要將帳號&lt;code&gt;A&lt;/code&gt;轉帳&lt;code&gt;100元&lt;/code&gt;到帳處&lt;code&gt;B&lt;/code&gt;，我們這邊將用&lt;code&gt;two phase commits&lt;/code&gt;來一步一步的完成這筆交易&lt;/p&gt;
&lt;h4 id=&#34;step-1--initial&#34;&gt;Step 1. 設定事務初始狀態為 initial&lt;/h4&gt;
&lt;p&gt;首先我們會在一個新的&lt;code&gt;collection&lt;/code&gt;名為&lt;code&gt;transaction&lt;/code&gt;新增一筆資料，記錄這該筆事務的資訊，並且設定&lt;code&gt;state&lt;/code&gt;為&lt;code&gt;initial&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transactions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;save&lt;/span&gt;(
{&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;}
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-2--accounts--pending&#34;&gt;Step 2. 開始修改 accounts 前，先修改初始狀態為 Pending&lt;/h4&gt;
&lt;p&gt;首先先尋找出狀態為&lt;code&gt;inital&lt;/code&gt;的事務。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transactions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;findOne&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc7a8b8a04f5126961522&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;,
     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;initial&amp;#34;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後在針對該事務，將&lt;code&gt;status&lt;/code&gt;更新為&lt;code&gt;pending&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transactions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;},{&lt;span style=&#34;color:#a6e22e&#34;&gt;$set&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pending&amp;#34;&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這時我們的事務資訊更新為如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc7a8b8a04f5126961522&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pending&amp;#34;&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-3-&#34;&gt;Step 3. 開始更新兩個帳戶&lt;/h4&gt;
&lt;p&gt;然後我們就可以開始更新兩個帳戶，並且將事務資訊，記錄到&lt;code&gt;pendingTransactions &lt;/code&gt;這個欄位。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;$ne&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt; }},
    {&lt;span style=&#34;color:#a6e22e&#34;&gt;$inc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{ &lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; }, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;$push&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt; }})
    
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt;, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;$ne&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt; }},
    {&lt;span style=&#34;color:#a6e22e&#34;&gt;$inc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{ &lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; }, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;$push&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt; }})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先先看看這行，這行是要先尋找出我們指令要更新的帳戶，其中&lt;code&gt;pendingTransactions: { $ne: t._id }&lt;/code&gt;代表的意思為&lt;code&gt;pendingTransactions&lt;/code&gt;裡不含&lt;code&gt;t._id&lt;/code&gt;才找出來。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;$ne&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt; }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後下面這兩行，才是更新欄位，會將&lt;code&gt;balance&lt;/code&gt;增加&lt;code&gt;t.value&lt;/code&gt;，然後將該事務的&lt;code&gt;id&lt;/code&gt;存放至&lt;code&gt;pendingTransactions &lt;/code&gt;內。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;$inc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{ &lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt; }, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;$push&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt; }})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後最後這是該階段帳戶的結果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc97fb8a04f5126961523&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;900&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pendingTransactions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;[ &lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc7a8b8a04f5126961522&amp;#34;&lt;/span&gt;) ] }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc984b8a04f5126961524&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1100&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pendingTransactions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;[ &lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc7a8b8a04f5126961522&amp;#34;&lt;/span&gt;) ] }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-4--committed&#34;&gt;Step 4. 設置事務狀態為 committed&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;db.transactions.update({_id:t._id},{$set:{state:&amp;quot;committed&amp;quot;}})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;結果如下，&lt;code&gt;state&lt;/code&gt;修改為&lt;code&gt;committed&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc7a8b8a04f5126961522&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;committed&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-5-done&#34;&gt;Step 5. 移出帳戶內事務資訊，並修改事務狀態為&lt;code&gt;done&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;首先我們將帳戶內的事務資訊給刪除，因為已經不需要了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;},{&lt;span style=&#34;color:#a6e22e&#34;&gt;$pull&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;}})
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt;},{&lt;span style=&#34;color:#a6e22e&#34;&gt;$pull&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc97fb8a04f5126961523&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;900&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pendingTransactions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;[ ] }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc984b8a04f5126961524&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1100&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pendingTransactions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;[ ] }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們最後再將事務狀態修改為&lt;code&gt;done&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transactions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;},{&lt;span style=&#34;color:#a6e22e&#34;&gt;$set&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done&amp;#34;&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc7a8b8a04f5126961522&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;destination&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面這一整串&lt;code&gt;Step1&lt;/code&gt;到&lt;code&gt;Step5&lt;/code&gt;的流程就是&lt;code&gt;two phase commit&lt;/code&gt;的流程。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;發生失敗的操作&lt;/h3&gt;
&lt;p&gt;上面都是跑正常的轉帳流程，還看不出這麻煩的流程可以做啥，所以我們這時來看看，如果中途轉帳時發生錯誤時，則流程要著麼樣跑，可以回復成原始模樣。&lt;/p&gt;
&lt;p&gt;我們只直接用如果已經更新帳戶內的&lt;code&gt;balance&lt;/code&gt;後發生錯誤要著麼進行回復。&lt;/p&gt;
&lt;h4 id=&#34;step-1--canceling&#34;&gt;Step 1. 設置事務狀態為 canceling&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transactions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;},{&lt;span style=&#34;color:#a6e22e&#34;&gt;$set&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;canceling&amp;#34;&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-2-&#34;&gt;Step 2. 回復為原始狀態&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;source&lt;/span&gt;, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;},
    {&lt;span style=&#34;color:#a6e22e&#34;&gt;$inc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;}, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;$pull&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;}})
    
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;accounts&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;destination&lt;/span&gt;, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;},
    {&lt;span style=&#34;color:#a6e22e&#34;&gt;$inc&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;balance&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;}, 
    &lt;span style=&#34;color:#a6e22e&#34;&gt;$pull&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;pendingTransactions&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們可以看一下回復後的結果，嗯沒錯，就是原始的樣子。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc97fb8a04f5126961523&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pendingTransactions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;[ ] }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4d7bc984b8a04f5126961524&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;balance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, 
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pendingTransactions&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;[ ] }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;step-3-canceled&#34;&gt;Step 3. 設置事務狀態為&lt;code&gt;canceled&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;最後再修改事務狀態，然後收工。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;transactions&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;({&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;_id&lt;/span&gt;},{&lt;span style=&#34;color:#a6e22e&#34;&gt;$set&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;state&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;canceled&amp;#34;&lt;/span&gt;}})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;--1&#34;&gt;~ 結語 ~&lt;/h2&gt;
&lt;p&gt;這篇文章說簡單的解釋了事務操作是啥以及特性，並且也有說明沒有事務操作會發生什麼事情，然後也說明了事務操作在&lt;code&gt;mongodb&lt;/code&gt;內的假實現，因為他並沒有完全的實現，所以我很喜歡叫他假實現。&lt;/p&gt;
&lt;p&gt;基本上這個鐵人賽已經進入尾尾聲了，基本上最後一篇已經不太會說技術的東西，也只是這三十天的心得，請見諒，因為我累囉~~~~~&lt;/p&gt;
&lt;h2 id=&#34;--2&#34;&gt;~ 參考資料 ~&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1&#34;&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1&#34;&gt;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/perform-two-phase-commits/&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/perform-two-phase-commits/&#34;&gt;https://docs.mongodb.com/manual/tutorial/perform-two-phase-commits/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>30-28之MongoDB運用研究---股價應用模擬(3)</title>
      <link>https://mark-lin.com/posts/20160928/</link>
      <pubDate>Wed, 28 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160928/</guid>
      <description>&lt;p&gt;上一篇研究簡單的說明完，股價分析的運用操作後，接下來我們這篇文章將要說明一些程式交易的東西，不過雖然說是程式交易，但事實上也只是簡單的計算出技術分析指標然後產生出買賣時間點，要說是程式交易好像也不太算兒……。&lt;/p&gt;
&lt;h2 id=&#34;--&#34;&gt;~ 二哈的需求分析 ~&lt;/h2&gt;
&lt;p&gt;今天咱們的二哈和我說，啊鳴~ 最近我想搞搞程式交易 ~ 幫我一下，然後我問他你想做啥，他竟然回，我也不知道也 ~ 我只是聽說那很潮、很容易賺錢 ~ 幫我咱 ~咱們是好哥吧，然後我一直在笑他你傻了啊，最後他就用出這種表情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161228-1.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;雖然很想和他說~你何不食屎忽 ~ 但想到要愛護動物就想是幫他想一下。&lt;/p&gt;
&lt;p&gt;回到正題，說到程式交易我們先看一下智庫的定義。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;　　程式交易在英文中叫做Program Trading, 就是將自己的金融操作方式，用很明確的方式去定義和描述，且遵守紀律的按照所設定的規則去執行交易。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面只是定義，不過我簡單的說明一下我的認知，就是『寫個策略計算出買賣點，然後叫電腦乖乖的進行交易』。&lt;/p&gt;
&lt;p&gt;網路上以及論文都有提供一些策略，你可以自已去試試看，不過會不會賺錢小的我就不知道了，順到幫我老師打廣告一下，如果對金融應用感興趣的可以看看他寫的書，&lt;a href=&#34;http://www.books.com.tw/products/0010731726&#34;&gt;傳送門在此&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;好再一次回來正題，那我們在這邊就簡單的講幾個策略……真的很簡單，因為我模擬的資料只有&lt;code&gt;k線&lt;/code&gt;別忘囉。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二哈可以利用30天移動平均線與當日開盤價進行買點與賣點的計算。&lt;/li&gt;
&lt;li&gt;二哈可以用五天期的平均成交量低於十天前的五天期平均成交量的 75%這策略來進行交易。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;就來這兩個吧~&lt;/p&gt;
&lt;h2 id=&#34;--1&#34;&gt;~ 實作 ~&lt;/h2&gt;
&lt;h3 id=&#34;30&#34;&gt;二哈可以利用30天移動平均線與當日開盤價進行買點與賣點的計算&lt;/h3&gt;
&lt;p&gt;首先咱們先來完成這個需求，在投資股票時，有個東西你在看k線時，幾乎所有的開盤軟體都會提供，它就是移動平均線，其中它又有十天線、月線、季線、年線、二年線等，簡單來說，十天線就是用前十天的平均來計算出來的一條件，非常的&lt;code&gt;Easy&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然後我們來看看我們的月線也就是30天期線的產生，首先先看看最外面有個變數&lt;code&gt;temp&lt;/code&gt;，它是一個陣列，用來存放&lt;code&gt;30&lt;/code&gt;天的開盤價，為了用來計算平均數用的，但有點注意，如果只是在外面宣告個&lt;code&gt;var temp = []&lt;/code&gt;這樣在&lt;code&gt;mongodb&lt;/code&gt;的&lt;code&gt;mapreduce&lt;/code&gt;函數是無法使用的。&lt;/p&gt;
&lt;p&gt;那要著麼使用呢 ? 拉下面一點會看到有個參數物件，其中的&lt;code&gt;scope&lt;/code&gt;就是讓我們可以使用&lt;code&gt;全域變數 temp&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;temp&lt;/code&gt;看完後在來看看我們的主體&lt;code&gt;mapreduce&lt;/code&gt;，但在執行&lt;code&gt;mapreduce&lt;/code&gt;之前，我們會先進行&lt;code&gt;query&lt;/code&gt;，將&lt;code&gt;code&lt;/code&gt;為&lt;code&gt;8111&lt;/code&gt;的尋找出來，這邊有個金句要注意一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;盡可能的在進行資料分析時，先將不需要的資料篩選剔除掉，這是個黃金法則。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[];
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;mapReduce&lt;/span&gt;(
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;){
			&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
		}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
			&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;splice&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;)
			&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
				&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
		    	&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
				&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
			}
			&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt;;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diff&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;diff&lt;/span&gt;);
		}
	},
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;){
     	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
    },
    { 
     	&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;,
     	&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8111&amp;#34;&lt;/span&gt; },
     	&lt;span style=&#34;color:#a6e22e&#34;&gt;scope&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
     		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;
     	}
     }
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們繼續的來看&lt;code&gt;map&lt;/code&gt;函數，我們這邊打算直接輸出&lt;code&gt;30天平均值與開盤價的差&lt;/code&gt;，當差值由負轉正時為買點，由正轉負時為賣點。我們首先會先處理前30天，的資料，在這前30天中，我們就直接輸出&lt;code&gt;0&lt;/code&gt;，並且同時將開盤價存入&lt;code&gt;temp&lt;/code&gt;，接下來在開始計算每一天的30天移動平均值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;){
			&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
		}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
			&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;splice&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;)
			&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
				&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
		    	&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
				&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
			}
			&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt;;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;diff&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;diff&lt;/span&gt;);
		}
	}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後我們會產生出如下的結果，例如在&lt;code&gt;20170517&lt;/code&gt;，差值由負轉正時就是一個買點，更金融一點的說法是，當開盤價突破30天移動平均線時，就可以進場囉。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-15T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt; }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-16T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-17T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-18T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; }
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;好這個需求就先做到這囉，來換換下個，呃對了至於&lt;code&gt;reduces&lt;/code&gt;麻，事實上沒啥用到……。&lt;/p&gt;
&lt;h3 id=&#34;-75&#34;&gt;二哈可以用五天期的平均成交量低於十天前的五天期平均成交量的 75%這策略來進行交易&lt;/h3&gt;
&lt;p&gt;嗯……事實上這策略是還在研究生時期看的一本書名很長的書寫的，有興趣的朋友可以去找找。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quantitative Trading Strategies:
Harnessing the Power of Quantitative Techniques to Create a Winning Trading Program &lt;a href=&#34;https://www.amazon.com/Quantitative-Trading-Strategies-Harnessing-McGraw-Hill/dp/0071412395&#34;&gt;就素這本&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不過事實上這個策略還需要搭配其它的策略一起使用勝率才比較高，不過不前只是借來模擬模擬，就懶的考慮著麼多囉。嗯好吧咱們來開始寫點程式。&lt;/p&gt;
&lt;p&gt;首先我們需要三個全域變數，一個為陣列取名為&lt;code&gt;tempVol5&lt;/code&gt;，存放用來計算5天平均成交量的值，而第二個變數取名為&lt;code&gt;temp&lt;/code&gt;，用來存放十天前的五天期平均成交量，最後一個為&lt;code&gt;tempVol10&lt;/code&gt;是存放，十天內的所有五天平均成交量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [],&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;mapReduce&lt;/span&gt;(
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;){
			&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;volume&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;volume&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
		}&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
			&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;last10avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
		   		&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;;
			&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;splice&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;volume&lt;/span&gt;)
			&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
				&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
			}
			&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempCount&lt;/span&gt;;
			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;){
				&lt;span style=&#34;color:#a6e22e&#34;&gt;last10avg&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
				&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;splice&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);
				&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;);
			}
			&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;((&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;);
			&lt;span style=&#34;color:#a6e22e&#34;&gt;emit&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;);
		}
	},
    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;){
     	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;values&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
    },
    { 
     	&lt;span style=&#34;color:#a6e22e&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;,
     	&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8111&amp;#34;&lt;/span&gt; },
     	&lt;span style=&#34;color:#a6e22e&#34;&gt;scope&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
     		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temp&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;,
     		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tempVol5&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol5&lt;/span&gt;,
     		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tempVol10&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tempVol10&lt;/span&gt;
     	}
     }
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;執行結果大概會長降，其中以&lt;code&gt;20170515&lt;/code&gt;的結果來看，它的&lt;code&gt;80&lt;/code&gt;代表的意思為當天的五天期平均成交量小於十天前的五天期成交量的80%，代表成交量極縮，可能會反彈，所以可考慮為買點，而反之成交量過大，可考慮為賣點。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-15T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-16T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt; }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-17T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt; }
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-05-18T14:21:08.037Z&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt; }
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;…&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;呼呼~~就先到這邊吧，我真的不太喜歡在這寫回測，真的有點難寫，不過說實話，我只是想複習一下&lt;code&gt;mapreduce&lt;/code&gt;才在這邊寫的，呼呼呼~。&lt;/p&gt;
&lt;h2 id=&#34;---&#34;&gt;~ 結語  ~&lt;/h2&gt;
&lt;p&gt;本篇文章運用了&lt;code&gt;mapreduce&lt;/code&gt;來運算出這兩種策略的可買賣時機，說實話不是很好用，而且很不好&lt;code&gt;debug&lt;/code&gt;，就算改寫成&lt;code&gt;node&lt;/code&gt;然後使用&lt;code&gt;devtool&lt;/code&gt;來進行&lt;code&gt;debug&lt;/code&gt;，它還是不給我跳進去，真的很頭痛，所以當時只能慢慢的一行一行測，唉唉唉~~ 不知不覺一定到了第28天了，鐵人賽也將要結束囉，明天就補充一些之前忘了說的東西好囉。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>30-27之MongoDB運用研究---股價應用模擬(2)</title>
      <link>https://mark-lin.com/posts/20160927/</link>
      <pubDate>Tue, 27 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160927/</guid>
      <description>&lt;p&gt;上一篇文章中，我們已經說明完基本的架構以及索引和分片的選擇，接下來我們就要實際的來使用資料來進行一些分析，能用搜尋時就用搜尋，不能用搜尋時就改用 aggreagate framework，然後如果再不能的話則用 mapreduce。&lt;/p&gt;
&lt;h2 id=&#34;--&#34;&gt;~ 二哈的分析需求 ~&lt;/h2&gt;
&lt;p&gt;這二貨根本沒有想需求，只是想說來分析一下，但分析啥也沒說，然後還要我們幫他想一下，然後還用這種表情看我，一臉用這種事情還用問我的表情。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然後我們只能乖乖的幫他想幾個。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二哈最基本應該會輸入股價代碼，然後輸出該股票的全部資料。&lt;/li&gt;
&lt;li&gt;二哈想尋找出該股票某段區間的資料。&lt;/li&gt;
&lt;li&gt;二哈想找出當日交易最熱絡的股票。&lt;/li&gt;
&lt;li&gt;二哈想找出某日價格波動最高的股票。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那我們先開始吧。&lt;/p&gt;
&lt;h2 id=&#34;--1&#34;&gt;~ 索引與片鍵的建立 ~&lt;/h2&gt;
&lt;p&gt;呃對了，雖然上一篇文章中，我們已經將索引與片鍵選出來了，分別為&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;索引&lt;/strong&gt; : &lt;code&gt;{ &amp;quot;date&amp;quot; : 1 , &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;片鍵&lt;/strong&gt; :  &lt;code&gt;{ &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但咱們突然想到一件事，你要建立的片鍵，必須要有索引，當我們的索引是複合索引，這樣我們還可以使用&lt;code&gt;{ &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;來建立嗎? 我們來試試。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ensureIndex&lt;/span&gt;({ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; })
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enableSharding&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shardCollection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test.stocks&amp;#34;&lt;/span&gt;,{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下，看來是不行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那要著麼辦呢?這時我們有三個辦法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;再增加一個&lt;code&gt;code&lt;/code&gt;索引。&lt;/li&gt;
&lt;li&gt;選擇 &lt;code&gt;{ &amp;quot;date&amp;quot; : 1 }&lt;/code&gt;與&lt;code&gt;{ &amp;quot;code&amp;quot; : 1}&lt;/code&gt;當索引。&lt;/li&gt;
&lt;li&gt;片鍵修改為&lt;code&gt;{ &amp;quot;date&amp;quot; : 1 , &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;要選那個呢，首先先來說說第一個，增加一個索引，缺點就在於需要更多的空間，而且這索引搜尋時幾乎不太用到，因為幾乎被原本的 &lt;code&gt;{ &amp;quot;date&amp;quot; : 1 , &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;可取代。&lt;/p&gt;
&lt;p&gt;那如果是刪除掉原本的，而直接用改為&lt;code&gt;{ &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;與&lt;code&gt;{ &amp;quot;date&amp;quot; : 1}&lt;/code&gt;第二個辦法呢? 啊喲~降好像真的比較好，空間會比第一個辦法的兩種索引還少，而且兩個索引也幾乎都可用到，先暫定你，第二種辦法。&lt;/p&gt;
&lt;p&gt;那第三種呢?片鍵修改為&lt;code&gt;{ &amp;quot;date&amp;quot; : 1 , &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;直接否定，因為這樣會變成升序片鍵，新增只會在某個&lt;code&gt;chunk&lt;/code&gt;然後一直分發一直分發，會吃很多壓力，反棄。&lt;/p&gt;
&lt;p&gt;所以這邊咱們就決定選辦法二，&lt;strong&gt;選擇 &lt;code&gt;{ &amp;quot;date&amp;quot; : 1 }&lt;/code&gt;與&lt;code&gt;{ &amp;quot;code&amp;quot; : 1}&lt;/code&gt;當索引&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ensureIndex&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; })
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ensureIndex&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; })
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;enableSharding&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shardCollection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test.stocks&amp;#34;&lt;/span&gt;,{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;別忘了還要開啟平衡器。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setBalancerState&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但我們執行上面的的操作&lt;code&gt;sh.shardCollection(&amp;quot;test.stocks&amp;quot;,{&amp;quot;code&amp;quot;:1})&lt;/code&gt;卻出錯了…… ，網路上有人說用&lt;code&gt;3.2.6&lt;/code&gt;就可以，但我的已經是&lt;code&gt;3.4&lt;/code&gt;了啊= =&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ok&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;errmsg&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Operation timed out&amp;#34;&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這時我換個方法試試，先分片再建資料，嗯可以，不過不知道為啥，我建到一定數量時，會開始不太好建，沒有全部新增進去的感覺，只建了&lt;code&gt;47577001&lt;/code&gt;筆，不過這問題改天在慢慢找。&lt;/p&gt;
&lt;h2 id=&#34;--2&#34;&gt;~ 資料操作與分析 ~&lt;/h2&gt;
&lt;p&gt;根據上面的需求一個一個慢慢的來說明。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;二哈最基本應該會輸入股價代碼，然後輸出該股票的全部資料。&lt;/h3&gt;
&lt;p&gt;這個非常的簡單，如下指令，不過我們重點是要看詳細內容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8111&amp;#34;&lt;/span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;explain&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executionStats&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下圖為結果，從下圖可知尋找到&lt;code&gt;5000筆&lt;/code&gt;股價資料，並且&lt;code&gt;SINGLE_SHARD&lt;/code&gt;也說明它是使用片鍵來尋找，並且是從分片&lt;code&gt;shard0002&lt;/code&gt;，尋找到，並花費了&lt;code&gt;12ms&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那我們來根據&lt;code&gt;date&lt;/code&gt;來排序看看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8111&amp;#34;&lt;/span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;sort&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;explain&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executionStats&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;花費時間增加了十五倍&lt;code&gt;203ms&lt;/code&gt;，並且&lt;code&gt;memUsage&lt;/code&gt;告訴了我們記憶體花費了&lt;code&gt;560000&lt;/code&gt;大約為&lt;code&gt;560kb&lt;/code&gt;這是到還好，不過這邊要注意，如果這種股價和日期一起用然後排序的搜尋越用越多的話，就要考慮空間換取速度了，也就是補建立索引。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading1&#34;&gt;二哈想尋找出該股票某段區間的資料。&lt;/h3&gt;
&lt;p&gt;這也是不難，如下，花費了&lt;code&gt;1051ms&lt;/code&gt;並且找回了&lt;code&gt;28&lt;/code&gt;筆，並且我們知道，它是先找到&lt;code&gt;8011&lt;/code&gt;在&lt;code&gt;shard0002&lt;/code&gt;，然後再去它裡面進行塞選&lt;code&gt;SHARDING_FILTER&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$and&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8111&amp;#34;&lt;/span&gt;},
	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gte&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-01&amp;#34;&lt;/span&gt;),
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$lt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-29&amp;#34;&lt;/span&gt;)}}
]}).&lt;span style=&#34;color:#a6e22e&#34;&gt;explain&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executionStats&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2017010120170129&#34;&gt;二哈想找到20170101到20170129的所有資料。&lt;/h3&gt;
&lt;p&gt;指令如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$and&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gte&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-01&amp;#34;&lt;/span&gt;),
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$lt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-29&amp;#34;&lt;/span&gt;)}}
]}).&lt;span style=&#34;color:#a6e22e&#34;&gt;explain&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executionStats&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下，因為結果輸出太長了，所以我只貼下一主要的輸出，不過這邊我來解釋一下分片是著麼來處理這塊，&lt;code&gt;mongos&lt;/code&gt;會向所有分片通知說，我要&lt;code&gt;20170101 ~ 20170102&lt;/code&gt;的資料，然後更分片就會開始作業，進行&lt;code&gt;SHARDING_FILTER&lt;/code&gt;把自已分片的符合範圍的找出來，然後再送往&lt;code&gt;mongos&lt;/code&gt;，下圖總共尋找到&lt;code&gt;9194&lt;/code&gt;筆，但它事實上還有輸出每個分片所輸出的結果，再圖片下面的表格我有寫出來。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下表為各分片處理的結果與時間，其中做計時間&lt;code&gt;executionTimeMillisEstimate&lt;/code&gt;是&lt;code&gt;mongodb&lt;/code&gt;裡預估的時間和實執行的時間不一定會相反，下表有個地方很奇怪，那就是&lt;code&gt;shard0001&lt;/code&gt;為什麼花的時間會比其它時間多很多。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;結果&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;估計時間&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Shard0000&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3063&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;code&gt;30ms&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shard0001&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3068&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;code&gt;840ms&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shard0002&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;3030&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;code&gt;20ms&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;我們先執行下面指令，來看看個分片的狀況。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getShardDistribution&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下，但沒有發現什麼異常分片，每個分片容量都很均衡，好，這題目前也無解……。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161227-6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading2&#34;&gt;二哈想找出當日交易最熱絡的股票&lt;/h3&gt;
&lt;p&gt;嗯嗯~這個需求的話我們就需要用到聚合工具來解決，首先老樣子我們先拆分流程，先假設他說的當日為&lt;code&gt;20170101&lt;/code&gt;好囉，然後所謂的熱絡我們就先暫定用成交量最大的來決定，和之前一樣一個流程一個流程寫。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先塞選出所有&lt;code&gt;20170101&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;再根據成交量進行排序。&lt;/li&gt;
&lt;li&gt;然後取第一個。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然後根據以上步驟我們就產生了下面的寫法，然後就有答案囉。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aggregate&lt;/span&gt;([
{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$match&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 
	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
		{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gte&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-01&amp;#34;&lt;/span&gt;),
	 	 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$lt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-02&amp;#34;&lt;/span&gt;)}}},
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$sort&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;volume&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;} },
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$limit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{ 
  &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;586128a18a97380b2cd52d56&amp;quot;), 
  &amp;quot;code&amp;quot; : &amp;quot;6705&amp;quot;, 
  &amp;quot;date&amp;quot; : ISODate(&amp;quot;2017-01-01T14:26:35.368Z&amp;quot;), 
  &amp;quot;open&amp;quot; : 150, &amp;quot;heigh&amp;quot; : 161, &amp;quot;close&amp;quot; : 150, &amp;quot;low&amp;quot; : 150, 
  &amp;quot;volume&amp;quot; : 100995 
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;heading3&#34;&gt;二哈想找出某日價格波動最高的股票&lt;/h3&gt;
&lt;p&gt;首先我們要先定義波動最高的股票，通常我們是都用標準差來代表波動度，但這邊有點兒麻煩，所以我直接取最高價與最低價的差最大的，然後我們和上面一樣來列流程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先塞選出所有&lt;code&gt;20170101&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;然後在計算出最高價與最低價的差，並存放在&lt;code&gt;v&lt;/code&gt;這欄位。&lt;/li&gt;
&lt;li&gt;然後根據&lt;code&gt;v&lt;/code&gt;進行排序。&lt;/li&gt;
&lt;li&gt;然後取第一個。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;根據上面的步驟產生的聚合如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stocks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;aggregate&lt;/span&gt;([
{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$match&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 
	{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
		{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$gte&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-01&amp;#34;&lt;/span&gt;),
	 	 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$lt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ISODate&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2017-01-02&amp;#34;&lt;/span&gt;)}}},
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$project&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;open&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;$subtract&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$heigh&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$low&amp;#34;&lt;/span&gt; ] }  } },
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$sort&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;} },
{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$limit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
])

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下，啊喲著麼怪怪，&lt;code&gt;v&lt;/code&gt;為&lt;code&gt;225&lt;/code&gt;……不過也是有可能，問題可能出在模擬時標準差那個設定，不過算囉~這只是模擬先降。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ObjectId&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;58612d243fa369100661abb9&amp;#34;&lt;/span&gt;), 
	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1566&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;open&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;987&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;225&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;---&#34;&gt;~  結語 ~&lt;/h2&gt;
&lt;p&gt;本篇文章簡單的說明完，你要如何使用這價股價資料，和進行一些簡單的分析，事實上它還可以進行更多的事情，例如程式交易或演算法交易之類，不過先說好這邊也只是將交易時點產生出來，你如果要實戰的話還需要去串接卷商的&lt;code&gt;Api&lt;/code&gt;說起來也不算太難，對了下一篇文章我們就簡單的說一下程式交易相關的需求來試試 ~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>30-26之MongoDB運用研究---股價應用模擬(1)</title>
      <link>https://mark-lin.com/posts/20160926/</link>
      <pubDate>Mon, 26 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160926/</guid>
      <description>&lt;p&gt;前面幾篇文章我們說明完了分片的運用後，我們接下來，就來實際的模擬個情景，我們來學習要如何的一步一步完成，咱們選擇的模擬情境為股價應用，現在&lt;code&gt;Fintech&lt;/code&gt;幾乎天天在報紙上看到，所以我們就來應景一下，來嘗試這建立看看金融應用。&lt;/p&gt;
&lt;h2 id=&#34;--&#34;&gt;~ 情景說明 ~&lt;/h2&gt;
&lt;p&gt;二哈是一位二貨，他平常就有在進行投資，大部份都是買買股票，但平常都只是直接卷商的平台看看資料，然後就直接投資囉，但是這貨兒每買必輸每賣必虧，然後有一天他聽到天賴之音說『請分析一下』，然後它就決定走上資料分析一途……這貨真的很二&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161226-2.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;回歸主題，二哈的需求只是分析，所以我們再分析前，我們要先建立好資料，通常能分析的資料量是越大越好，所以我們這邊一定會需要用到分片，並且我們先從最基本的股票資料k線與成交量來建立資料，首先我們的資料結構應該如下。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
股價代碼	&amp;quot;code&amp;quot; : 1011,
日期		&amp;quot;date&amp;quot; : 20160101,
開盤價  	&amp;quot;open&amp;quot; : 100,
最高價  	&amp;quot;height&amp;quot; : 100,
收盤價  	&amp;quot;close&amp;quot; : 90,
最低價  	&amp;quot;low&amp;quot; : 80,
成交量  	&amp;quot;volume&amp;quot; : 1000
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後我們來正試開始吧。&lt;/p&gt;
&lt;h2 id=&#34;-step-1--&#34;&gt;~ Step 1. 架構分析 ~&lt;/h2&gt;
&lt;h3 id=&#34;heading&#34;&gt;索引架構思考&lt;/h3&gt;
&lt;p&gt;首先我們根據以上的資料結構可知，我們該主題目前不太需要考慮到正規化與反正規化的問題，那接下來我們來思考看看&lt;strong&gt;索引&lt;/strong&gt;的問題，但那蠢二哈只想到分析但不知道分析啥，我們來幫他想想。&lt;/p&gt;
&lt;p&gt;我們來一條一條列出，我們想到的需求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二哈最基本應該會輸入股價代碼，然後輸出該股票的全部資料。&lt;/li&gt;
&lt;li&gt;二哈想尋找出該股票某段區間的資料。&lt;/li&gt;
&lt;li&gt;二哈想找出當日交易最熱絡的股票。&lt;/li&gt;
&lt;li&gt;二哈想找出某日價格波動最高的股票。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;細細想一下，大部份的使用情境都一定需要時間，而且是個範圍，然後有時在搭配某個股票，所以我們基本上會針對&lt;code&gt;date&lt;/code&gt;和&lt;code&gt;code&lt;/code&gt;來考慮建立索引，那要選用那種索引呢，目前有三種選擇我們先列出。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;第一種
{ &amp;quot;date&amp;quot; : 1 , &amp;quot;code&amp;quot; : 1 }

第二種
{ &amp;quot;code&amp;quot; : 1 , &amp;quot;date&amp;quot; : 1 }

第三種
{ &amp;quot;code&amp;quot; :1 },{ &amp;quot;date&amp;quot; :1 } 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;還記得&lt;code&gt;{ &amp;quot;sortKey&amp;quot; : 1 , &amp;quot;queryKey&amp;quot; : 1 }&lt;/code&gt;這個複合索引時有提到的東西麻，很常用來排序的請放前面，日期和股價代碼，理論上來說日期會很常用到排序，所以我們第二種索引可以刪除。&lt;/p&gt;
&lt;p&gt;那第一種與第三種要選那種? 首先我們要先知道第三種佔的空間一定會比較多，然後我們在思考一件事，我們股價代碼會很常用到排序麻，如果沒有那我們選用第一種就好，嗯的確沒有，所以我們目前『暫定』選第一種&lt;code&gt;{ &amp;quot;date&amp;quot; : 1 , &amp;quot;code&amp;quot; : 1 }&lt;/code&gt;為索引。&lt;/p&gt;
&lt;h3 id=&#34;heading1&#34;&gt;分片的片鍵選擇&lt;/h3&gt;
&lt;p&gt;接下來我們要來決定我們的分片依據要選誰 ? 首先我們先複習一下昨天才說過的良好的片鍵特性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容易分割片鍵&lt;/li&gt;
&lt;li&gt;高隨機性的片鍵&lt;/li&gt;
&lt;li&gt;可以指向單個分片的片鍵&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但以上三點都符合不太可能，所以我們這時要先思考我們的需求用最多的是啥 ? 答案是搜尋，
就是所謂的讀取操作，然後我們在搜尋時最常使用的欄位是誰?&lt;code&gt;code&lt;/code&gt;與&lt;code&gt;date&lt;/code&gt;，那是單一搜尋較多還是範圍搜尋，應該是範圍，知道了以上的需求我們來想想我們的片鍵要選誰?&lt;/p&gt;
&lt;p&gt;首先第一候選人&lt;code&gt;code&lt;/code&gt;，先想一下它有沒有符合上面三個特性的其中一個，容易分割的片鍵，嚴格來說一般般，不過以基數來看也算充足，應該是還行~ 高隨機就一定沒有，而最後一個可以指向單個分片，嗯有~因為當你有尋找某個股票時它就一定會去所屬的分片找，所以嚴格來說它第一和第三個特性都有符合。&lt;/p&gt;
&lt;p&gt;再來是第二候選人&lt;code&gt;date&lt;/code&gt;，首先是容易分割片鍵，嗯這一定有，第二個高隨機性，沒有而且它是個升序片鍵，第三點指向單個分片這點也算有，所以嚴格來說它第一和第三個特性也都有符合。&lt;/p&gt;
&lt;p&gt;兩個候選人第一和第三都符合，但有點要注意，&lt;code&gt;date&lt;/code&gt;這種候選人，它是升序片鍵，也就是說接下來新增的資料都會塞在最後面的&lt;code&gt;chunk&lt;/code&gt;，所以這種類型的經常會導致資料均衡壓力會很重，所以暫不考慮它。&lt;/p&gt;
&lt;p&gt;在去除了&lt;code&gt;date&lt;/code&gt;，就選擇&lt;code&gt;code&lt;/code&gt;了嗎 ? NO~NO~ 還有一個東西需要考慮，我們要用這兩個建立複合片鍵嗎 ?&lt;/p&gt;
&lt;p&gt;說實話適合，它就需要大量讀取範圍時很適合使用，但我們目前的欄位好像都沒辦法達至它的要求，複合片鍵要求第一個片鍵是基數較低的欄位，無論是&lt;code&gt;code&lt;/code&gt;或&lt;code&gt;date&lt;/code&gt;都不適合，所以我們就先取掉這選項。&lt;/p&gt;
&lt;p&gt;根據以上種種原因，我們先暫定分片為&lt;code&gt;code&lt;/code&gt;，除非後來有根據可以換別的。&lt;/p&gt;
&lt;h2 id=&#34;-step-2--&#34;&gt;~ Step 2. 建立模擬資料 ~&lt;/h2&gt;
&lt;p&gt;首先一樣看看我們的&lt;code&gt;pack.json&lt;/code&gt;，我們一樣需要使用&lt;code&gt;mongodb&lt;/code&gt;而另一個需要使用的&lt;code&gt;randgen&lt;/code&gt;，我要用它產生出常態分配股價，這邊是&lt;a href=&#34;https://github.com/h091237557/30-MongoDB/blob/master/Test/30-26/test.js&#34;&gt;全部的程式碼&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;{
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;30-26&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;index.js&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scripts&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;&lt;/span&gt;
  },
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;author&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ISC&amp;#34;&lt;/span&gt;,
  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dependencies&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mongodb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^2.2.16&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;randgen&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^0.1.0&amp;#34;&lt;/span&gt;
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我們這邊簡單說一下常態分配產生股價的方法，常態分配是統計學上，用來描述某些群體的機率分配，我們來看看下面這張圖，圖片來自於&lt;code&gt;wiki&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161226-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上面這張圖主要就是說某些群體，它的值會有&lt;code&gt;６８％&lt;/code&gt;在深藍的範圍內，也就是所謂的一個標準差內，而有&lt;code&gt;９５％&lt;/code&gt;的機率是會在二個標準差以內。&lt;/p&gt;
&lt;p&gt;然後我們看一下，我們上面使用的&lt;code&gt;lib``randgen&lt;/code&gt;來看看他的用法。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;num = rnorm(2, 5);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第一個參數為平均數，第二個參數為標準差，也就是說它有68%的機率，&lt;code&gt;num&lt;/code&gt;會座落在&lt;code&gt;2-5 ~ 2+5 &lt;/code&gt;之間也就是&lt;code&gt;-3~7&lt;/code&gt;之間，而有95％的機率會落在&lt;code&gt;2-5*2 ~ 2+5*2&lt;/code&gt;也就是&lt;code&gt;-8~12&lt;/code&gt;之間。&lt;/p&gt;
&lt;p&gt;上面大概說明完常態分配後，我們接下來就可以來看一下我們模擬股價的程式碼，不算太難，其中該方法的第一個參數為你想模擬幾天的資料，而第二個參數是上一個股標的結果，代入繼續丟資料進這個陣列中，這樣我們比較好丟到&lt;code&gt;mongodb&lt;/code&gt;中。&lt;/p&gt;
&lt;p&gt;然後我來說一下幾個值，首先是&lt;code&gt;price&lt;/code&gt;，它是每天要用常態時的平均數，我們只有在第一天時會先隨機產生個價格，然後接下來的每天我們的&lt;code&gt;price&lt;/code&gt;會改用前一天的收盤價，然後再用它來產生出當天的其它價格。而至於&lt;code&gt;sd&lt;/code&gt;就是標準差，我們乘上&lt;code&gt;0.07&lt;/code&gt;是因為台股&lt;code&gt;７%&lt;/code&gt;限制，然後在除&lt;code&gt;3&lt;/code&gt;是因為三個標準差以常態分配來看是&lt;code&gt;99.9%&lt;/code&gt;，也就是說我這個模擬股價只有&lt;code&gt;0.1%&lt;/code&gt;的情況下才會超過&lt;code&gt;7%&lt;/code&gt;上限，這只是模擬～～～&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//　用來建立單筆多天的股價資料
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createStockDatas&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randPrice&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randCode&lt;/span&gt;();
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Date(),
    &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt;;

  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;price&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randPrice&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;price&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.07&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,
      &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;price&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;)),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;low&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;price&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;)),
      &lt;span style=&#34;color:#a6e22e&#34;&gt;heigh&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randHeigh&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;price&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;),
			&lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;price&lt;/span&gt;,&lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;)),
		 	&lt;span style=&#34;color:#a6e22e&#34;&gt;volume&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100000&lt;/span&gt;);

    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;code&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setDate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;date&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getDate&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;),
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;open&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;heigh&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;heigh&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;close&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;close&lt;/span&gt;, 
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;low&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;low&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;volume&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;volume&lt;/span&gt;
    })
    &lt;span style=&#34;color:#a6e22e&#34;&gt;temp&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;low&lt;/span&gt;;
  }
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;
}

&lt;span style=&#34;color:#75715e&#34;&gt;// 產生常態分配的最高價，但最高價不能小於開盤價。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randHeigh&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;);
  }
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
}

&lt;span style=&#34;color:#75715e&#34;&gt;// 產生常態分配的最底價，但最低價不能大於最高價。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randlow&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;heigh&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;heigh&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;avg&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;);
  }
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
}

&lt;span style=&#34;color:#75715e&#34;&gt;// 產生亂數 min ~ max 範圍。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;floor&lt;/span&gt;((Math.&lt;span style=&#34;color:#a6e22e&#34;&gt;random&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;max&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;);
}

&lt;span style=&#34;color:#75715e&#34;&gt;// 隨機產生股價代碼。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randCode&lt;/span&gt;() {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;randNum&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;toString&lt;/span&gt;()
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;建立好個股模擬多天的方法後，我們就可以模擬多筆多天的資料新增的&lt;code&gt;mongos&lt;/code&gt;裡囉，注意我們的&lt;code&gt;port&lt;/code&gt;要用&lt;code&gt;20006&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongodb&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongodb&amp;#39;&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;randgen&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;;

&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongodbServer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongodb&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Server&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20006&lt;/span&gt;, {
  &lt;span style=&#34;color:#a6e22e&#34;&gt;auto_reconnect&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
  &lt;span style=&#34;color:#a6e22e&#34;&gt;poolSize&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
});

&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mongodb&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Db&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;mongodbServer&lt;/span&gt;);
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stockCount&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;days&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3600&lt;/span&gt;;


&lt;span style=&#34;color:#75715e&#34;&gt;// 執行新增至mongodb動作。
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;() {
	&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;collection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stocks&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;collection&lt;/span&gt;) {
		&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;datas&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;testDatas&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;stockCount&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;days&lt;/span&gt;);
		&lt;span style=&#34;color:#a6e22e&#34;&gt;collection&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;datas&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) {
			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;) {
				&lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;);
			} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {}
		});
	});
});

&lt;span style=&#34;color:#75715e&#34;&gt;// 用來建立模擬資料
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;testDatas&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;stockCount&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;days&lt;/span&gt;) {
  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;stockCount&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createStockDatas&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;days&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;);
  }
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;result&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們這個測試準備打算建立&lt;code&gt;10000&lt;/code&gt;筆股票，然後模擬天數為&lt;code&gt;5000&lt;/code&gt;，基本上總共有5000千多萬筆資料。&lt;/p&gt;
&lt;p&gt;fight ~~~&lt;/p&gt;
&lt;p&gt;別忘了開掛。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;node --max-old-space-size=8192 test.js 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;今天先到這囉。&lt;/p&gt;
&lt;h2 id=&#34;--1&#34;&gt;~ 結語 ~&lt;/h2&gt;
&lt;p&gt;本篇文章中，我們說明了我們這個應用的架構設計，已經索引與分片的架構，下一篇文章我們將會說明二哈這貨的使用說明。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>30-25之MongoDB分片Sharding(3)---片鍵的選擇</title>
      <link>https://mark-lin.com/posts/20160925/</link>
      <pubDate>Sun, 25 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160925/</guid>
      <description>&lt;p&gt;上一篇文章我們詳細的說明完分片的機制後，接下來我們就要來詳細的說明片鍵的選擇，片鍵的選擇關係到你的分片執行速度與效能，並且一但建立後，要再修改幾乎是不太可能的，所以請像選老婆一樣，用心的選~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完美的片鍵定義(這鬼不存在的)&lt;/li&gt;
&lt;li&gt;片鍵的種類&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;--&#34;&gt;~ 完美的片鍵定義(這鬼不存在) ~&lt;/h2&gt;
&lt;p&gt;在我們開始學習片鍵的選擇前，我們要先知道，什麼樣的片鍵是最好的，最理想的，但想也知道最好的東西是不存在的，但我們還是要知道，才能給我們的選擇給個基準。&lt;/p&gt;
&lt;p&gt;整體來說完美的片鍵有下面特性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有的新增、刪除、更新等寫的操作，都可以平均分配到所有的分片。&lt;/li&gt;
&lt;li&gt;所有的搜尋等讀的操作，都可以平均分配到所有的分片。&lt;/li&gt;
&lt;li&gt;所有的操作都只會發到相關的分片，例如更新時不會跑去分片內是空的進行更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們先來說說第一個特性，如果沒有該項特性會發生什麼事情，假設我們的&lt;code&gt;cluster&lt;/code&gt;有四個分片，我們當然是希望每個分片可以處理&lt;code&gt;25%&lt;/code&gt;的事情，但是假設我們做那些寫的操作時(ex.新增)全部都集中在其中一個分片，那你會發覺那個分片會越來越大~越來越大~ ，而且別忘了我們上章節說的&lt;code&gt;chunk&lt;/code&gt;分配，它是根據數量來進行分配，不是用大小，因此你的那個分片內的&lt;code&gt;chunk&lt;/code&gt;不會分配到其它分片，這樣也就失去你用分片的意義了。&lt;/p&gt;
&lt;p&gt;而至於第二點特性，&lt;code&gt;mongos&lt;/code&gt;在處理搜尋請求時主要會分成下述兩種的處理方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;搜尋時不包含片鍵&lt;/strong&gt;，則會將搜尋分配到發有的分片，然後合并搜尋結果，再返回給&lt;code&gt;client&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;搜尋時包含片鍵&lt;/strong&gt;，則直接根據片鍵，然後找出要尋找的&lt;code&gt;chunk&lt;/code&gt;，向相對的分片發送搜尋請求。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根據上面的說明，我們知道&lt;code&gt;mongos&lt;/code&gt;的讀操作過程，然後我們這時在回來思考，如果這時搜尋時都集中在一個分片上，會發生什麼事，首先搜尋時不包含片鍵這種類型影響不大，但另一種就會影響到，因為原本該分散的壓力，反而都集中在一個分片，運氣不好搜尋請求過多，就爆掉了。&lt;/p&gt;
&lt;p&gt;而至於第三點，就只是浪費資源囉~&lt;/p&gt;
&lt;p&gt;這邊我們大概來整理一下，根據以上三點大概可以拆分成幾個&lt;strong&gt;良好片鍵的特性&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;容易分割片鍵&lt;/strong&gt; : 容易分割的片鍵可以使&lt;code&gt;mongodb&lt;/code&gt;更容易的均衡各分片的資料量，不容易發生過大的分片，&lt;strong&gt;基數&lt;/strong&gt;越大的走容易分割資料。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;基數是指系統將資料分成&lt;code&gt;chunk&lt;/code&gt;的能力，例如&lt;code&gt;性別&lt;/code&gt;欄位就是個低基數的例子，只有男與女。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;高隨機性的片鍵&lt;/strong&gt; : 具有越高隨機性的片鍵，他所分割出來的資料越容易均衡，也代表可避免任何一個分片承受過多的壓力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以指向單個分片的片鍵&lt;/strong&gt; : 越可指向單個分片的片鍵，越能降低搜尋效能壓力，像是隨機型的片鍵就無法做到。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這世界沒有著麼美好的事情，基本上幾乎找不到完全符合上述的條件，所以相對的咱們只能選擇盡可能符合你需要的片鍵，而這時就只能根據你專案的需求來決定，例如說這專案是讀吃比較重還是寫吃比較重，比較最大的搜尋條件，或搜尋時間過久的搜尋，這時都是要考量的。&lt;/p&gt;
&lt;h2 id=&#34;--1&#34;&gt;~ 一些片鍵的種類 ~&lt;/h2&gt;
&lt;p&gt;這邊開始我們就要來說明一些片鍵的種類。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;升序片鍵&lt;/h3&gt;
&lt;p&gt;這種類型的片鍵，大部份都是欄位為&lt;code&gt;Date&lt;/code&gt;類型或是&lt;code&gt;ObjectId&lt;/code&gt;，是種會根據時間來增加欄位，或是根據先後順序進來的欄位。&lt;/p&gt;
&lt;p&gt;假如我們使用這種欄位做為片鍵，會發生什麼事情 ? 一開始建立片鍵時你不會看到什麼問題，而是再於你新增時會發生，假設我們有下面的分片&lt;code&gt;cluster&lt;/code&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;shard001&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;shard002&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;shard003&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{min~2000}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{2007~2008}&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;{2014~2016}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{2001~2003}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{2009~2010}&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;{2017~max}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{2004~2006}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{2011~2013}&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;然後這時我們要問個問題，&lt;strong&gt;我們進行新增時，它會加到那個&lt;code&gt;chunk&lt;/code&gt;?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;答案是&lt;code&gt;{2017~max}&lt;/code&gt;，所以也就是說，接來下你所有的新增操作，都只是在這個分片中進行，並且該&lt;code&gt;chunk&lt;/code&gt;也會一直變大，然後在分拆、再分配，這樣會導致&lt;code&gt;mongos&lt;/code&gt;壓力大因為會一直分配，而且所有的新增操作壓力都會放在這個分片上，這不是什麼好事。&lt;/p&gt;
&lt;p&gt;呃對了順到說一下&lt;code&gt;ObjectId&lt;/code&gt;為啥也是，因為它的組成有時間戳。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ObjectId = 時間戳 + 機器 + PID + 計數器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;heading1&#34;&gt;隨機分配的片鍵&lt;/h3&gt;
&lt;p&gt;這種類型的片鍵，大概就是類似選擇使用者名、電子郵件等，或是資料沒有規律的欄位，由於資料新增時是隨機分配的，所以各分片增加的速度會差不多，這也代表這&lt;code&gt;mongos&lt;/code&gt;需要處理&lt;code&gt;chunk&lt;/code&gt;分配的壓力下降不少。&lt;/p&gt;
&lt;p&gt;但這種類型的片鍵有個缺點，那就是在尋找大量資料的情況下，效率不高，因為資料都是分散的必定需要去每個分片尋找，而如果是集中式的片鍵(類似等等要說的片鍵)，就指定針對該分片進行尋找就好囉。&lt;/p&gt;
&lt;h3 id=&#34;heading2&#34;&gt;根據位置的片鍵&lt;/h3&gt;
&lt;p&gt;這類型的片鍵，基本上就是根據用戶的IP、經緯度、或是地址之類，不過所謂的位置定義，事實上不能以實體上的位置來定義，有時後也可以用比較相關的資料方在一起，這也是種方法。&lt;/p&gt;
&lt;p&gt;這種類型的片鍵優點就是讀與寫操作時比較有效率，因為可以很明確的選擇某個分片，但缺點就是有可能會有某些分片資料很多，某些分片資料很少的狀況，例如假設片鍵根據縣市來進行分片，然後存使用者資料，這時會發現新北市那個分片資料量爆多的，因為它人口最多。&lt;/p&gt;
&lt;h3 id=&#34;hashed-&#34;&gt;Hashed 片鍵&lt;/h3&gt;
&lt;p&gt;這種類型的片鍵讀與寫的操作能平均的分配，但缺點也是隨機分配片鍵的缺點，尋找大量資料時效率不高。&lt;/p&gt;
&lt;p&gt;我們做個簡單的範例，假設我們有如下資料。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100000&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
	&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;});
}
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們指行下面指令來建立&lt;code&gt;hash&lt;/code&gt;索引，事實上我現在才知道有這種索引……。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ensureIndex&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hashed&amp;#34;&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後進行分片。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shardCollection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test.users&amp;#34;&lt;/span&gt;,{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hashed&amp;#34;&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;咱們來執行&lt;code&gt;sh.status()&lt;/code&gt;看看結果，它會將&lt;code&gt;name&lt;/code&gt;欄位的值進行&lt;code&gt;hash&lt;/code&gt;然後等出&lt;code&gt;hash值&lt;/code&gt;後在進行分片，其中這個&lt;code&gt;NumberLong(&amp;quot;-6854066565760758296&amp;quot;)&lt;/code&gt;就是&lt;code&gt;hash值&lt;/code&gt;，基本上都有唯一性，但是只一種情況下會有相同的值，那就數值型，例如&lt;code&gt;1.9999&lt;/code&gt;和&lt;code&gt;1&lt;/code&gt;這兩種&lt;code&gt;hash值&lt;/code&gt;會相等，因為&lt;code&gt;1.9999&lt;/code&gt;會取整數。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161225-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;heading3&#34;&gt;複合型片鍵&lt;/h3&gt;
&lt;p&gt;這樣類型的策略最適合用來處理需要大量搜尋範圍的應用，通常這種片鍵中的第一個值是比較低基數的鍵(最好是分片數的兩倍)，而第二值就是我們上面介紹過的升序片鍵，假設我們有下列資料，&lt;code&gt;state&lt;/code&gt;是個基數小的欄位，大概只有六個分區，然後另一個就是升序欄位&lt;code&gt;Date&lt;/code&gt;，它是建立日期，它只會增加不會減，除非你自已偷改系統時間。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{ &amp;quot;state&amp;quot; : &amp;quot;AAA&amp;quot; , &amp;quot;date&amp;quot; : 20160101},
{ &amp;quot;state&amp;quot; : &amp;quot;BBB&amp;quot; , &amp;quot;date&amp;quot; : 20160102},
{ &amp;quot;state&amp;quot; : &amp;quot;CCC&amp;quot; , &amp;quot;date&amp;quot; : 20160103},
{ &amp;quot;state&amp;quot; : &amp;quot;DDD&amp;quot; , &amp;quot;date&amp;quot; : 20160104},
{ &amp;quot;state&amp;quot; : &amp;quot;EEE&amp;quot; , &amp;quot;date&amp;quot; : 20160105},
{ &amp;quot;state&amp;quot; : &amp;quot;AAA&amp;quot; , &amp;quot;date&amp;quot; : 20160106},
...
...
{ &amp;quot;state&amp;quot; : &amp;quot;AAA&amp;quot; , &amp;quot;date&amp;quot; : 20161231}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後這時我們進行分片。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{ &amp;quot;state&amp;quot; : 1, &amp;quot;date&amp;quot; :1 }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;它大置上會長成這樣，下面為其中一個&lt;code&gt;chunk&lt;/code&gt;的範例，該&lt;code&gt;chunk&lt;/code&gt;只會包含分區為&lt;code&gt;AAA&lt;/code&gt;與&lt;code&gt;BBB&lt;/code&gt;的並且它的日期是升序，也就是接下來新增的只會增加日期不會減少。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;chunk1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;範圍&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{&amp;ldquo;AAA&amp;rdquo; ~ &amp;ldquo;BBB&amp;rdquo;}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;document1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;state&amp;rdquo; : &amp;ldquo;AAA&amp;rdquo; , &amp;ldquo;date&amp;rdquo; : 20160101}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;document2&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;state&amp;rdquo; : &amp;ldquo;BBB&amp;rdquo; , &amp;ldquo;date&amp;rdquo; : 20160102}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;document3&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;state&amp;rdquo; : &amp;ldquo;AAA&amp;rdquo; , &amp;ldquo;date&amp;rdquo; : 20160110}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;...&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;documentN&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;state&amp;rdquo; : &amp;ldquo;AAA&amp;rdquo; , &amp;ldquo;date&amp;rdquo; : 20161231}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其它的&lt;code&gt;chunk&lt;/code&gt;大至致上也長的差不多，這時我們簡單的用表格來看看我們的&lt;code&gt;cluster&lt;/code&gt;是什麼樣子，基本上最一開始&lt;code&gt;chunk&lt;/code&gt;數量不多。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;shard001&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;shard002&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;shard003&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;AAA&amp;rdquo; ~ &amp;ldquo;BBB&amp;rdquo;}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;CCC&amp;rdquo; ~ DDD&amp;rdquo; }&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;EEE&amp;rdquo; ~ &amp;ldquo;FFF&amp;rdquo; }&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;然後這時資料開始隨著時間流動，開始慢慢的增加，而當一個&lt;code&gt;chunk&lt;/code&gt;裝不下時，就會開始拆開，這時我們的&lt;code&gt;cluster&lt;/code&gt;大概是降。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;shard001&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;shard002&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;shard003&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;AAA&amp;rdquo; ~ &amp;ldquo;BBB&amp;rdquo;} &lt;code&gt;**&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;CCC&amp;rdquo; ~ DDD&amp;rdquo; } &lt;code&gt;**&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;EEE&amp;rdquo; ~ &amp;ldquo;FFF&amp;rdquo; } &lt;code&gt;**&lt;/code&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;AAA&amp;rdquo; ~ &amp;ldquo;BBB&amp;rdquo;} &lt;code&gt;**&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;CCC&amp;rdquo; ~ DDD&amp;rdquo; }&lt;code&gt;**&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;EEE&amp;rdquo; ~ &amp;ldquo;FFF&amp;rdquo; } &lt;code&gt;**&lt;/code&gt;|&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;AAA&amp;rdquo; ~ &amp;ldquo;BBB&amp;rdquo;}&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ &amp;ldquo;EEE&amp;rdquo; ~ &amp;ldquo;FFF&amp;rdquo; }&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;有沒有注意到我們上面有用&lt;code&gt;**&lt;/code&gt;符號，這代表&lt;strong&gt;這個&lt;code&gt;chunk&lt;/code&gt;不會在變動了&lt;/strong&gt;，我們接下來的新增動作只會影響到最下面的&lt;code&gt;chunk&lt;/code&gt;。這有什麼好處，好處是寫入請求時，非常的有效率，它只會去新增至最下面的&lt;code&gt;chunk&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;這種策略另一種好處是搜尋，如果我們這時要尋找&lt;code&gt;AAA&lt;/code&gt;的某段時間，它會處理的非常快，因為每一塊&lt;code&gt;chunk&lt;/code&gt;時間區間都是固定的，而且如果要找最新的一定是去找最下面的&lt;code&gt;chunk&lt;/code&gt;，因此如果某些需求是很常使用到搜尋某欄位(升序欄位)的範圍的很適和用這種策略。&lt;/p&gt;
&lt;h2 id=&#34;--2&#34;&gt;~ 結語 ~&lt;/h2&gt;
&lt;p&gt;本篇文章花了很多的文字在慢慢的說明片鍵的選擇，片鍵真的是影響到你的分片的好壞，一個好的片鍵帶你上天堂，壞的片鍵帶你下地獄，沒選好真的會很好，尤其是那種很老的系統一開始片鍵就選錯，然後資料量又超大，如果有人叫你想辦法調整效能，你大概會選擇幹掉提出問題的人，記好，片鍵是要根據你的應用需求來決定，這很重要。&lt;/p&gt;
&lt;h2 id=&#34;heading4&#34;&gt;~參考資料~&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/sharding/#sharding-strategy&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/sharding/#sharding-strategy&#34;&gt;https://docs.mongodb.com/v3.2/sharding/#sharding-strategy&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.chinaunix.net/uid-15795819-id-3521990.html&#34;&gt;&lt;a href=&#34;http://blog.chinaunix.net/uid-15795819-id-3521990.html&#34;&gt;http://blog.chinaunix.net/uid-15795819-id-3521990.html&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mongoing.com/blog/post/on-selecting-a-shard-key-for-mongodb&#34;&gt;&lt;a href=&#34;http://www.mongoing.com/blog/post/on-selecting-a-shard-key-for-mongodb&#34;&gt;http://www.mongoing.com/blog/post/on-selecting-a-shard-key-for-mongodb&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.0/tutorial/choose-a-shard-key/&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.0/tutorial/choose-a-shard-key/&#34;&gt;https://docs.mongodb.com/v3.0/tutorial/choose-a-shard-key/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>30-24之MongoDB分片Sharding(2)---Chunk的札事</title>
      <link>https://mark-lin.com/posts/20160924/</link>
      <pubDate>Sat, 24 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160924/</guid>
      <description>&lt;p&gt;在上一篇文章中說明完基本的分片概念後，我們本章節要更深的了解分片內的&lt;code&gt;chunk&lt;/code&gt;，
它是每個分片組成的東西，我們這篇將要說明它的拆分與分配機制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chunk&lt;/code&gt;的分配與拆分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-chunk--&#34;&gt;~ chunk 的分配與拆分 ~&lt;/h2&gt;
&lt;p&gt;在上一篇文章中，我們知道每個分片中都包含了多個&lt;code&gt;chunk&lt;/code&gt;，而每&lt;code&gt;chunk&lt;/code&gt;中，又包含了某個範圍的&lt;code&gt;document&lt;/code&gt;組，我們先簡單來畫個圖複習一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然後我們接下來要討論的就是，&lt;code&gt;mongodb&lt;/code&gt;是如何拆分&lt;code&gt;chunk&lt;/code&gt;和如何將&lt;code&gt;chunk&lt;/code&gt;分片到&lt;code&gt;shard&lt;/code&gt;裡，首先我們先來看看&lt;code&gt;chunk&lt;/code&gt;的拆分。&lt;/p&gt;
&lt;h3 id=&#34;chunk-&#34;&gt;chunk 的拆分&lt;/h3&gt;
&lt;p&gt;首先我們先想一下，&lt;code&gt;chunk&lt;/code&gt;它本身是一堆&lt;code&gt;document&lt;/code&gt;的集合體，大概長降,我們使用上一章節的範例，來看一下&lt;code&gt;chunk&lt;/code&gt;的詳細資訊，假設我們都已經分片好了，我們直接看結果。&lt;/p&gt;
&lt;p&gt;首先我們需要先移動到一個名為&lt;code&gt;config&lt;/code&gt;的資料庫。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;use config
&amp;gt; switched to db config
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後再執行&lt;code&gt;db.chunks.find().pretty()&lt;/code&gt;來看一下，目前只有一個&lt;code&gt;chunk&lt;/code&gt;，它目前窩在&lt;code&gt;shard0000&lt;/code&gt;，而它的範圍是&lt;code&gt;min ~ max&lt;/code&gt;，呃對了忘了說，我們的資料是1萬筆的&lt;code&gt;{&amp;quot;name&amp;quot;:&amp;quot;user&amp;quot;+i}&lt;/code&gt;這種物件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;這時我們要問個問題囉，&lt;strong&gt;它什麼時後會再分成另一個&lt;code&gt;chunk&lt;/code&gt; ?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;答案是&lt;code&gt;chunk&lt;/code&gt;的大小，&lt;code&gt;mongodb&lt;/code&gt;預設&lt;code&gt;chunk&lt;/code&gt;最大限制為&lt;code&gt;64MB&lt;/code&gt;，當超過時&lt;code&gt;mongos&lt;/code&gt;會將它拆分為兩塊&lt;code&gt;chunk&lt;/code&gt;，如下圖，此圖為官方圖片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;預設是&lt;code&gt;64MB&lt;/code&gt;，當然我們也有辦法修改預設，指令如下，下面&lt;code&gt;32&lt;/code&gt;代表為&lt;code&gt;32MB&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;switched&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;settings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;save&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chunksize&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是這邊要修改大小時有幾點要思考一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;chunk&lt;/code&gt; 越小時可以使分片的可以使分片的資料量更均衡，不會有差距太大的狀況，但缺點就是，因為小所以會常移動&lt;code&gt;chunk&lt;/code&gt;，所以&lt;code&gt;mongos&lt;/code&gt;壓力會比較重。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chunk-1&#34;&gt;chunk 的拆分實驗&lt;/h3&gt;
&lt;p&gt;咱們來簡單的測試看看&lt;code&gt;chunk&lt;/code&gt;的拆分，首先來建立一些資料，大小約為&lt;code&gt;4188890 byte&lt;/code&gt;大概為&lt;code&gt;4mb&lt;/code&gt;左右，然後我們的&lt;code&gt;chunk&lt;/code&gt;大小預設為&lt;code&gt;1mb&lt;/code&gt;，所以理論上應會開拆為3~4個&lt;code&gt;chunk&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100000&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
	&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;});
}
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;建好後別忘了執行這兩個指令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;ensureIndex&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;})
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;shardCollection&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test.users&amp;#34;&lt;/span&gt;,{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們指行&lt;code&gt;sh.status()&lt;/code&gt;來看看結果，呃我淚囉為什麼會拆分為8個……&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我們來檢查一下&lt;code&gt;chunk size&lt;/code&gt;的設定，如下圖嗯沒錯~是&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;settings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那我們在來檢查一下資料大小是不是我們算錯，呃也沒算也，&lt;code&gt;size&lt;/code&gt;為&lt;code&gt;4188890&lt;/code&gt;的確是&lt;code&gt;4mb&lt;/code&gt;左右。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;stats&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這問題目前無解，官網目前也只說當&lt;code&gt;chunk&lt;/code&gt;成長到超過設定大小時會進行分拆。&lt;a href=&#34;https://docs.mongodb.com/v3.0/core/sharding-chunk-splitting/&#34;&gt;傳送門&lt;/a&gt;給你看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chunk-2&#34;&gt;chunk 的分配&lt;/h3&gt;
&lt;p&gt;在說明完&lt;code&gt;chunk&lt;/code&gt;的拆分後，我們要說明一下&lt;code&gt;chunk&lt;/code&gt;的分配，也就是指&lt;code&gt;mongos&lt;/code&gt;如何將&lt;code&gt;chunk&lt;/code&gt;分配給分片。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mongos&lt;/code&gt;中有個東西叫&lt;code&gt;balancer&lt;/code&gt;，這東西就是負責&lt;code&gt;chunk&lt;/code&gt;的搬移，它會週期性的檢查分片是否存在不均衡，如果有不均衡情況，它就會自動開始搬遷&lt;code&gt;chunk&lt;/code&gt;，你可以根據下面指令來看看&lt;code&gt;balancer&lt;/code&gt;的訊息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;locks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;執行結果如下，其中&lt;code&gt;who&lt;/code&gt;就說明了我們的&lt;code&gt;balancer&lt;/code&gt;在那個地方，我們的則是在&lt;code&gt;&amp;quot;who&amp;quot; : &amp;quot;LindeMBP:20006&lt;/code&gt;這台上面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;這邊也要問題個問題，&lt;strong&gt;什麼是不均衡情況?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根據官網的說明，假設某個分片裡的&lt;code&gt;chunk&lt;/code&gt;數量，多於其它的分片某個數量，就被認定為&lt;code&gt;不均衡情況&lt;/code&gt;，但這邊也有個數量級距，請看下表一下，我們以第一行&lt;code&gt;小於20&lt;/code&gt;這個來說明，它主要是說，當你的&lt;code&gt;chunk&lt;/code&gt;數量小於20時，你的&lt;code&gt;最多chunk的分片&lt;/code&gt;與&lt;code&gt;最少chunk的分片&lt;/code&gt;差超過&lt;code&gt;2&lt;/code&gt;時，就會開始進行搬遷。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;chunk&lt;/code&gt;數量&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;遷移閾值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;小於20&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20-79&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;大於80&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;這邊也有一點要注意。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mongodb有提供手動分配&lt;code&gt;chunk&lt;/code&gt;的功能，所以在沒打開&lt;code&gt;balancer &lt;/code&gt;的情況下也可手動將&lt;code&gt;chunk&lt;/code&gt;分配給其它的分片。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;chunk-3&#34;&gt;chunk 分配的實作。&lt;/h3&gt;
&lt;p&gt;首先我們先來看看我們的分片狀態如何，我們執行&lt;code&gt;sh.status()&lt;/code&gt;，我們可以發現，所有的&lt;code&gt;chunk&lt;/code&gt;都集中在&lt;code&gt;shared0000&lt;/code&gt;，正常來說應該是平均分配，為啥了?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我們可以用下面指令，來檢查看看我們上面所說的&lt;code&gt;balancer&lt;/code&gt;有沒有開啟。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;settings&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;().&lt;span style=&#34;color:#a6e22e&#34;&gt;pretty&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下圖為結果，你可以看到咱們的&lt;code&gt;balancer&lt;/code&gt;的&lt;code&gt;stopped&lt;/code&gt;為&lt;code&gt;true&lt;/code&gt;，可以知道我們的&lt;code&gt;balancer&lt;/code&gt;是停止的，所以咱們要用下面指令來打開來。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;sh&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setBalancerState&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;執行完後，&lt;code&gt;balancer&lt;/code&gt;就是開始它的工作，來檢查分片有沒有均衡，如果不均衡就重分配，我在來執行看看&lt;code&gt;sh.status()&lt;/code&gt;的結果。呼呼~分配完成&lt;code&gt;332&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161224-10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;heading&#34;&gt;~結語~&lt;/h2&gt;
&lt;p&gt;本篇文章中，我們將上一章節所缺少的一些觀念補齊，讓我們更加的了解到分片的原理，其它包含了&lt;code&gt;chunk&lt;/code&gt;的分割條件已經一些資訊查看，並且還有&lt;code&gt;chunk&lt;/code&gt;如何分配到分片的說明，接下來的一篇我們將說明片鍵的策略。&lt;/p&gt;
&lt;h2 id=&#34;heading1&#34;&gt;~參考資料~&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/tutorial/manage-sharded-cluster-balancer/#enable-the-balancer&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/tutorial/manage-sharded-cluster-balancer/#enable-the-balancer&#34;&gt;https://docs.mongodb.com/v3.2/tutorial/manage-sharded-cluster-balancer/#enable-the-balancer&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kknews.cc/zh-tw/news/orlj8o.html&#34;&gt;&lt;a href=&#34;https://kknews.cc/zh-tw/news/orlj8o.html&#34;&gt;https://kknews.cc/zh-tw/news/orlj8o.html&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>30-23之MongoDB分片Sharding---Hello Sharding</title>
      <link>https://mark-lin.com/posts/20160923/</link>
      <pubDate>Fri, 23 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160923/</guid>
      <description>&lt;p&gt;本篇文章將要說明 mongodb 的分片`，上一章節說明了如何將資料同步到其它台節點上，而本篇文章是將要說明，如何將資料分割到其它台節點，讓我們可以更快速、更多容量空間的來做一些哩哩扣扣的事情。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分片原理。&lt;/li&gt;
&lt;li&gt;分片實作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;heading&#34;&gt;~分片原理~&lt;/h2&gt;
&lt;p&gt;分片是啥 ? 它主要的概念就是將&lt;code&gt;collection&lt;/code&gt;拆分，將其分散到不同的機器，來分擔單一&lt;code&gt;server&lt;/code&gt;的壓力。&lt;/p&gt;
&lt;p&gt;咱們先來看看我們平常單一&lt;code&gt;server&lt;/code&gt;的&lt;code&gt;mongodb&lt;/code&gt;結構，其中&lt;code&gt;mongod&lt;/code&gt;就代表我們實際上存放資料的地方，它平常都是指令和&lt;code&gt;client&lt;/code&gt;端通信，&lt;code&gt;client&lt;/code&gt;就有點像咱們平常用的&lt;code&gt;mongodb shell&lt;/code&gt;之類的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;而咱們在來看看，如果用了分片會變啥樣，如下圖，三個&lt;code&gt;mongod&lt;/code&gt;都會統一通信到&lt;code&gt;mongos&lt;/code&gt;，在和&lt;code&gt;client&lt;/code&gt;進行通訊，&lt;code&gt;mongos&lt;/code&gt;不存儲任何資料，它就是個路由&lt;code&gt;server&lt;/code&gt;，你要什麼資料就發給它，它在去決定去那個&lt;code&gt;mongod&lt;/code&gt;裡尋找資料。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那這邊有個問題來囉~這三個&lt;code&gt;mongod&lt;/code&gt;要著麼決定誰要存放那些資料 ? 答案是下面標題&lt;code&gt;片鍵&lt;/code&gt;~&lt;/p&gt;
&lt;h3 id=&#34;-shard-keys&#34;&gt;片鍵 Shard Keys&lt;/h3&gt;
&lt;p&gt;片鍵是啥 ? 它就是當你要進行分片時，你選定的&lt;code&gt;collection&lt;/code&gt;切分的依據，假設我們有下面的資料。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{ &amp;quot;name&amp;quot;:&amp;quot;mark&amp;quot; , &amp;quot;age&amp;quot; :18}
{ &amp;quot;name&amp;quot;:&amp;quot;steven&amp;quot; , &amp;quot;age&amp;quot; :20}
{ &amp;quot;name&amp;quot;:&amp;quot;ian&amp;quot; , &amp;quot;age&amp;quot; :20}
{ &amp;quot;name&amp;quot;:&amp;quot;jack&amp;quot; , &amp;quot;age&amp;quot; :30}
{ &amp;quot;name&amp;quot;:&amp;quot;stanly&amp;quot; , &amp;quot;age&amp;quot; :31}
{ &amp;quot;name&amp;quot;:&amp;quot;jiro&amp;quot; , &amp;quot;age&amp;quot; :32}
{ &amp;quot;name&amp;quot;:&amp;quot;hello&amp;quot; , &amp;quot;age&amp;quot; :41}
{ &amp;quot;name&amp;quot;:&amp;quot;world&amp;quot; , &amp;quot;age&amp;quot; :52}
...

...
{ &amp;quot;name&amp;quot;:&amp;quot;ho&amp;quot;,&amp;quot;age&amp;quot; : 100}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;它就有可能會分片成這樣，假設咱們拆分為三片，然後我們指定片鍵為&lt;code&gt;age&lt;/code&gt;欄位，它就大致上可能會分成這樣，會根據片鍵建立&lt;code&gt;chunk&lt;/code&gt;，然後再將這堆&lt;code&gt;chunk&lt;/code&gt;分散到這幾個分片中，&lt;code&gt;{min~10}&lt;/code&gt;就是一個&lt;code&gt;chunk&lt;/code&gt;，就是一組&lt;code&gt;document&lt;/code&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;分片001&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;分片002&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;分片003&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{ min ~ 10 }&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ 30 ~ 40 }&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;{ 60 ~ 70 }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{ 10 ~ 20 }&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ 40 ~ 50 }&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;{ 70 ~ max }&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;{ 20 ~ 30 }&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;{ 50 ~ 60 }&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;這邊事實上有很多東西可以思考，例如片鍵的選者或分片設計等，這些主題將留在後面幾篇在來介紹，你之要先大概只知片鍵是啥的就好了。&lt;/p&gt;
&lt;h2 id=&#34;heading1&#34;&gt;~分片實作~&lt;/h2&gt;
&lt;p&gt;首先咱們先在單機上來建立看看，一樣先進入&lt;code&gt;mongodb shell&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mongo --nodb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後使用&lt;code&gt;ShardingTest&lt;/code&gt;來建立分片用的&lt;code&gt;cluster&lt;/code&gt;，其中&lt;code&gt;shards&lt;/code&gt;為&lt;code&gt;3&lt;/code&gt;代表建立3個分片，而&lt;code&gt;chungszie&lt;/code&gt;之後會講，先簡單設&lt;code&gt;1&lt;/code&gt;就好。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cluster&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ShardingTest&lt;/span&gt;({ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shards&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; , &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;chunksize&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;執行完我們可以看到它的輸出。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然後就準備換到另一個&lt;code&gt;shell&lt;/code&gt;，接下來我們就可以連接到&lt;code&gt;mongos&lt;/code&gt;囉，根據我們上面的結果可知，我們的&lt;code&gt;mongos&lt;/code&gt;是建立在&lt;code&gt;port : 20006&lt;/code&gt;的位置，來連吧~&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ( &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mongo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1:20006&amp;#34;&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;getDB&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;進去以後我們來丟些資料，來測試看看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000000&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
	&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;});
}
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們可以執行&lt;code&gt;sh.status()&lt;/code&gt;來看看這個&lt;code&gt;cluster&lt;/code&gt;的運行狀況。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是我們的分片可還沒啟用喔，它還需要執行這行指令。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh.enableSharding(&amp;quot;test&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;呃對了~上面的指令只是允許&lt;code&gt;test&lt;/code&gt;這資料庫可以使用分片了，但在進行分片前，我們還要先決定要如何針對&lt;code&gt;collection&lt;/code&gt;進行拆分，這時我們就要選擇片鍵&lt;code&gt;sharing key&lt;/code&gt;，它將根據某個欄位進行拆分，這邊注意，只要索引過的鍵才能夠作為片鍵，所以我們要先建索引。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;db.users.ensureIndex({&amp;quot;name&amp;quot;:1})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後再針對&lt;code&gt;collection&lt;/code&gt;分片，&lt;code&gt;test.users&lt;/code&gt;第一個是資料庫，第二個是&lt;code&gt;collection&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh.shardCollection(&amp;quot;test.users&amp;quot;,{&amp;quot;name&amp;quot;:1})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後執行完看到這個結果就代表ok~&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{ &amp;quot;collectionsharded&amp;quot; : &amp;quot;test.users&amp;quot;, &amp;quot;ok&amp;quot; : 1 }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後咱們在來看一下&lt;code&gt;sh.status()&lt;/code&gt;的結果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中可以看到他&lt;code&gt;shared0000&lt;/code&gt;裡已經將&lt;code&gt;collection&lt;/code&gt;開拆成很多個&lt;code&gt;chunk&lt;/code&gt;囉，不過因為我們&lt;code&gt;Balancer&lt;/code&gt;的東西還沒啟動，所以還沒分配到其它&lt;code&gt;shard&lt;/code&gt;，這篇我們下章節在來說說。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然後我們來搜尋看看詳細資訊，下圖結果可以知道它去這&lt;code&gt;shard0000&lt;/code&gt;尋找到&lt;code&gt;doument&lt;/code&gt;，並且就如同索引一樣，不需要全部掃描來尋找，是的你可以把片鍵想成索引。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user889391&amp;#34;&lt;/span&gt;}).&lt;span style=&#34;color:#a6e22e&#34;&gt;explain&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;executionStats&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161223-7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;heading2&#34;&gt;~結語~&lt;/h2&gt;
&lt;p&gt;本篇文章中，我們學習了分片的基本知識，也簡單的介紹建立分片的方法，但事實上還有很多分片的原理我們沒有完全說到，例如如何分片、片鍵的選擇、&lt;code&gt;chunk&lt;/code&gt;的拆分，這些我們後面幾篇都會來說明說明。&lt;/p&gt;
&lt;h2 id=&#34;heading3&#34;&gt;~參考資料~&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/sharding/&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/sharding/&#34;&gt;https://docs.mongodb.com/v3.2/sharding/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.fens.me/mongodb-shard/&#34;&gt;&lt;a href=&#34;http://blog.fens.me/mongodb-shard/&#34;&gt;http://blog.fens.me/mongodb-shard/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>30-22之MongoDB的副本集 replica set(2)---使用Docker建立MongoDB Cluster</title>
      <link>https://mark-lin.com/posts/20160922/</link>
      <pubDate>Thu, 22 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160922/</guid>
      <description>&lt;p&gt;上篇文章我們已經說明完，如何在本機上建立 mongodb 副本集，而本篇文章，我們將要實際的使用docker來建立有三個節點的副本集，也就是所謂 cluster 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;開始前的準備&lt;/li&gt;
&lt;li&gt;建立架構圖&lt;/li&gt;
&lt;li&gt;fight !&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;heading&#34;&gt;~開始前的準備~&lt;/h2&gt;
&lt;p&gt;首先再開始之前你當然要先將&lt;code&gt;docker&lt;/code&gt;裝好，可以參考下面這章，但你的&lt;code&gt;docker compose&lt;/code&gt;那邊可以不用做到，因為我還沒研究出，如何用&lt;code&gt;docker compose&lt;/code&gt;來建立&lt;code&gt;cluster&lt;/code&gt;……QQ。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://ithelp.ithome.com.tw/articles/10184657&#34;&gt;30-2之使用Docker來建構MongoDB環境&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;確定執行&lt;code&gt;docker --version&lt;/code&gt;有類似下面的資訊出來就ok囉。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Docker version 1.12.3, build 6b644ec
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下來呢咱們需要下載&lt;code&gt;mongodb image&lt;/code&gt;，平常我們都是用&lt;code&gt;docker compose&lt;/code&gt;直接執行它都會幫我們偷偷下載好，而現在我們就需要自已下載，指令如下。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull mongo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後咱們就都準備好囉。&lt;/p&gt;
&lt;h2 id=&#34;heading1&#34;&gt;~建立架構圖~&lt;/h2&gt;
&lt;p&gt;我們來看看下圖，首先我們會先建立一個&lt;code&gt;cluster&lt;/code&gt;取名為&lt;code&gt;my-mongo-cluster&lt;/code&gt;，然後裡面有三個&lt;code&gt;mongodb&lt;/code&gt;並且對外連接&lt;code&gt;port&lt;/code&gt;設為&lt;code&gt;30001&lt;/code&gt;、&lt;code&gt;30002&lt;/code&gt;、&lt;code&gt;30003&lt;/code&gt;，並且這三個的&lt;code&gt;container&lt;/code&gt;都可以互相溝通。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;heading2&#34;&gt;~建立流程~&lt;/h2&gt;
&lt;p&gt;Fight !&lt;/p&gt;
&lt;h3 id=&#34;step1-mymongoclusterdocker-network&#34;&gt;step1 將&lt;code&gt;my-mongo-cluster&lt;/code&gt;加入到&lt;code&gt;docker network&lt;/code&gt;裡&lt;/h3&gt;
&lt;p&gt;我們先執行看看&lt;code&gt;docker network ls&lt;/code&gt;然後會出現下圖的列表。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然後我們再執行下面的指令將新增個&lt;code&gt;network&lt;/code&gt;到&lt;code&gt;docker network&lt;/code&gt;裡。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker network create my-mongo-cluster
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後你就可以看到我們將&lt;code&gt;my-mongo-cluster&lt;/code&gt;加入至&lt;code&gt;docker network&lt;/code&gt;裡。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;step2--mongodb--container-mymongocluster--network-&#34;&gt;Step2 建立三個 MongoDB 的 Container，並加入至 my-mongo-cluster 這 network 中&lt;/h3&gt;
&lt;p&gt;首先來看看指令，然後我們來解釋一下每個指令是啥意思。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker run&lt;/code&gt; : 就只是執行&lt;code&gt;docker&lt;/code&gt;而以。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 30001:27017&lt;/code&gt; : 將&lt;code&gt;port:27017&lt;/code&gt;暴露出來，為了讓其它&lt;code&gt;mongodb&lt;/code&gt;可連接到，而&lt;code&gt;30001&lt;/code&gt;則為該&lt;code&gt;container&lt;/code&gt;的本機&lt;code&gt;port&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--name mongo1&lt;/code&gt; : 將該&lt;code&gt;container&lt;/code&gt;命名為&lt;code&gt;mongo1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--net my-mongo-cluster &lt;/code&gt; : 將該&lt;code&gt;container&lt;/code&gt;加入到&lt;code&gt;my-mongo-cluster&lt;/code&gt;這&lt;code&gt;docker network&lt;/code&gt;裡面，然它們可以互相通信。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mongo mongod --replSet my-mongo-set&lt;/code&gt; : 運行&lt;code&gt;mongod&lt;/code&gt;時將該&lt;code&gt;mongo&lt;/code&gt;加入到名為&lt;code&gt;my-mongo-set&lt;/code&gt;的副本集中。&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;docker run 
-p 30001:27017 
--name mongo1 
--net my-mongo-cluster 
mongo mongod --replSet my-mongo-set
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;記好上面這些是要縮成一行來執行，如下。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -p 30001:27017 --name mongo1 --net my-mongo-cluster mongo mongod --replSet my-mongo-set
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;執行完這行指令後，你就建立好了一個&lt;code&gt;container&lt;/code&gt;呢，但別忘囉我們要建立三個，所以還要再執行兩次，另外兩個只是修改一下&lt;code&gt;port&lt;/code&gt;，對了在執行其它兩個建立時要新開兩個&lt;code&gt;Shell&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run 
-p 30002:27017 
--name mongo1 
--net my-mongo-cluster 
mongo mongod --replSet my-mongo-set
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;docker run 
-p 30003:27017 
--name mongo1 
--net my-mongo-cluster 
mongo mongod --replSet my-mongo-set
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;建立完後你可以執行&lt;code&gt;docker ps&lt;/code&gt;指令看首你所建立的&lt;code&gt;container&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;step3-&#34;&gt;Step3 設定副本集&lt;/h3&gt;
&lt;p&gt;建立完後，咱們就可以連到&lt;code&gt;container&lt;/code&gt;裡控制&lt;code&gt;mongodb&lt;/code&gt;囉。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker exec -it mongo1 mongo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後進行後我們想看看它的副本集資訊，我們執行下面的程式碼。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mongo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost:27017&amp;#39;&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;getDB&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;isMaster&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然後看到上面的執行結果，會發現它提示我們還沒有可用的副本集設定，所以我們這時要寫一段段代碼，主要就是副本集設定，程式碼如下，其中&lt;code&gt;_id&lt;/code&gt;要設定的與所設定的副本集名稱一樣。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
  	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;my-mongo-set&amp;#34;&lt;/span&gt;,
  	&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;members&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
  		{
  			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
  			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mongo1:27017&amp;#34;&lt;/span&gt;
  		},
  		{
  			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
  			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mongo2:27017&amp;#34;&lt;/span&gt;
  		},
  		{
  			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
  			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mongo3:27017&amp;#34;&lt;/span&gt;
  		}
  	]
  }

&lt;span style=&#34;color:#a6e22e&#34;&gt;rs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;initiate&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們再執行一次&lt;code&gt;db.isMaster()&lt;/code&gt;，你就會看到我們設定完成囉。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;step4-&#34;&gt;Step4 測試是否有備份&lt;/h3&gt;
&lt;p&gt;首先我們先建立些測試資料，並新增到&lt;code&gt;primary&lt;/code&gt;的&lt;code&gt;mongodb&lt;/code&gt;中。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
	&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;});
}
&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後再連線到&lt;code&gt;secondary&lt;/code&gt;裡尋找看看。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mongo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mongo2:27017&amp;#39;&lt;/span&gt;)).&lt;span style=&#34;color:#a6e22e&#34;&gt;getDB&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;db2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSlaveOk&lt;/span&gt;()
&lt;span style=&#34;color:#a6e22e&#34;&gt;db2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;執行結果如下~完成~。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161222-7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;heading3&#34;&gt;~結語~&lt;/h2&gt;
&lt;p&gt;副本集方面的事情我就先說明到這，雖然還有不少東西可以講，但那都是管理方面與副本集設計方面的問題，這些我就真的懶講囉……&lt;/p&gt;
&lt;p&gt;&lt;code&gt;P.S&lt;/code&gt; 今天打流感疫苗，但著麼打完後就要燒起來的感覺……&lt;/p&gt;
&lt;h2 id=&#34;heading4&#34;&gt;~參考資料~&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sohamkamani.com/blog/2016/06/30/docker-mongo-replica-set/&#34;&gt;&lt;a href=&#34;http://www.sohamkamani.com/blog/2016/06/30/docker-mongo-replica-set/&#34;&gt;http://www.sohamkamani.com/blog/2016/06/30/docker-mongo-replica-set/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sofar.blog.51cto.com/353572/1640558&#34;&gt;&lt;a href=&#34;http://sofar.blog.51cto.com/353572/1640558&#34;&gt;http://sofar.blog.51cto.com/353572/1640558&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cnodejs.org/topic/5590adbbebf9c92d17e734de&#34;&gt;&lt;a href=&#34;https://cnodejs.org/topic/5590adbbebf9c92d17e734de&#34;&gt;https://cnodejs.org/topic/5590adbbebf9c92d17e734de&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>30-21之MongoDB的副本集 replica set(1)</title>
      <link>https://mark-lin.com/posts/20160921/</link>
      <pubDate>Wed, 21 Sep 2016 19:51:35 +0800</pubDate>
      <author>h091237557@gmail.com (marklin)</author>
      <guid>https://mark-lin.com/posts/20160921/</guid>
      <description>&lt;p&gt;本篇文章將要說明， mongodb 的副本集。嗯~想想一個情況，現在咱們只使用一台 server 來存放資料，我們現在只是測試和開發， GG 囉也只是啊一聲，但如果是正式上線環境呢 ? GG 囉可不是啊一聲就可以解決的，你可能就被老闆不要不要的，很慘的~ 而副本集就是用來解決這問題，事實上也就只是被備份。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;副本集原理&lt;/li&gt;
&lt;li&gt;副本集建立(單機版給你好測試)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;heading&#34;&gt;~副本集原理~&lt;/h2&gt;
&lt;p&gt;首先我們先看看&lt;code&gt;mongodb&lt;/code&gt;官網所提供的圖。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161221-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;上面這張圖，你可以想成這個系統它有三個&lt;code&gt;mongodb&lt;/code&gt;，其中&lt;code&gt;primary&lt;/code&gt;節點接受所有&lt;code&gt;client&lt;/code&gt;端的讀或寫，整個副本集只有一個&lt;code&gt;primary&lt;/code&gt;，並且每當有資料新增時，&lt;code&gt;primary&lt;/code&gt;會同步到其它兩個&lt;code&gt;secondary&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然後當&lt;code&gt;primary&lt;/code&gt;節點&lt;code&gt;GG&lt;/code&gt;的話，會變成下面這張圖的結果(一樣來至官網)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161221-2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在這裡面，各節點都是通過一個叫心跳請求(&lt;code&gt;heartbeat request&lt;/code&gt;)的機制來通信，如果當&lt;code&gt;primary&lt;/code&gt;節點如果在10秒內無法和其它節點進行通信，這系統會自動從&lt;code&gt;secondary&lt;/code&gt;節點中選取一個當主節點。&lt;/p&gt;
&lt;h2 id=&#34;heading1&#34;&gt;~副本集建立~&lt;/h2&gt;
&lt;p&gt;在上面大概簡單的了解完它的原理後，我們就實際上的來操作看看，首先我們執行下面指令，
來進行到沒有&lt;code&gt;db&lt;/code&gt;的&lt;code&gt;mongodb shell&lt;/code&gt;環境。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mongo --nodb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後通過下面的指令，就可以建立一個副本集，其中&lt;code&gt;nodes : 3&lt;/code&gt;代表三個節點，一個&lt;code&gt;primary&lt;/code&gt;其它兩個為&lt;code&gt;secondary&lt;/code&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;replicaSet = new ReplSetTest({&amp;quot;nodes&amp;quot;:3})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不過執行完上面這行指令它還沒啟動喔還需要執行下面兩行，&lt;code&gt;startSet&lt;/code&gt;為啟動那三個節點的進程，而&lt;code&gt;initiate&lt;/code&gt;為設定複制功能。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;replicaSet.startSet()
replicaSet.initiate()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;當執行完上面兩行後，我們就要跳到另一個&lt;code&gt;Shell&lt;/code&gt;，然後連接到&lt;code&gt;primary&lt;/code&gt;的節點，喲~?那它的&lt;code&gt;port&lt;/code&gt;是啥?雖然有些文章中說預設是&lt;code&gt;31000&lt;/code&gt;、&lt;code&gt;31001&lt;/code&gt;、&lt;code&gt;31002&lt;/code&gt;但我的電腦卻不是，所以建議還是在執行&lt;code&gt;startSet&lt;/code&gt;時看一下，它應該會輸出下面這張圖的資訊。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161221-3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;嗯看到了吧，通常第一個就是&lt;code&gt;primary&lt;/code&gt;，不是的話就試試其它的，然後我們這時就可以執行下面指令進入到它的裡面了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;conn1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mongo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1:20000&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下來我們就可以執行一些指令來看看這個副本集的狀態。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;primaryDB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conn1&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getDB&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;primaryDB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;isMaster&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果如下，其中&lt;code&gt;isMaster&lt;/code&gt;這欄位就是說明這節點是&lt;code&gt;primary&lt;/code&gt;節點。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161221-4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-secondary-&#34;&gt;~驗證一下有沒有備份到 secondary 節點~&lt;/h2&gt;
&lt;p&gt;首先我們先新增一些資料。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;){
	&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;push&lt;/span&gt;({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;});
}
&lt;span style=&#34;color:#a6e22e&#34;&gt;primaryDB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;users&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;insert&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;objs&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後我們這時連到&lt;code&gt;secondary&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;conn2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Mongo&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;127.0.0.1:20001&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;進去後在輸入。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;secondaryDB&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;conn2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;getDB&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;secondaryDB&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;find&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後你會看到下面的錯誤訊息。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$err&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not master and slaveok=false&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13435&lt;/span&gt; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這時要要再執行這行指令才能在&lt;code&gt;seoncdary&lt;/code&gt;才能開啟。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;coon2&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setSlaveOk&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這時你在執行一次搜尋應該就可以看到結果囉~如下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://yixiang8780.com/outImg/20161221-5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;heading2&#34;&gt;~結語~&lt;/h2&gt;
&lt;p&gt;對不起我今天真的想不到結啥語，只能說+u~&lt;/p&gt;
&lt;h2 id=&#34;heading3&#34;&gt;~參考資料~&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/zhanjindong/p/3251330.html&#34;&gt;&lt;a href=&#34;http://www.cnblogs.com/zhanjindong/p/3251330.html&#34;&gt;http://www.cnblogs.com/zhanjindong/p/3251330.html&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/reference/configuration-options/#net.port&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/reference/configuration-options/#net.port&#34;&gt;https://docs.mongodb.com/v3.2/reference/configuration-options/#net.port&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/deploy-replica-set/&#34;&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/deploy-replica-set/&#34;&gt;https://docs.mongodb.com/manual/tutorial/deploy-replica-set/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>